- cache ['bubble', left] do 
  - size = 10
  - border_width = 4
  - stroke_width = 1
  - svg_size = size + border_width * 2 + 2
  - ypos1 = stroke_width * 3
  - ypos2 = stroke_width * 3 + size

  //- if left
  - xpos1 = svg_size
  - xpos2 = svg_size - size
  - bubbleadjustx = 1
  - spacingadjustx = -border_width * 3  
  - borderadjustx = -stroke_width * 3
  - spacingoffsetx = -1

  / - else
  /   - xpos1 = 0
  /   - xpos2 = size
  /   - bubbleadjustx = -1
  /   - spacingoffsetx = 1
  /   - spacingadjustx = border_width * 3
  /   - borderadjustx = stroke_width * 3

  - points = "#{xpos1 + bubbleadjustx},#{ypos1} #{xpos1 + bubbleadjustx},#{ypos2} #{xpos2},#{ypos1} #{xpos1 + bubbleadjustx}, #{ypos1}"
  - points_border = "#{xpos1}, #{ypos1 - stroke_width} #{xpos1},#{ypos2 + stroke_width * 2} #{xpos2 + borderadjustx},#{ypos1 - stroke_width} #{xpos1}, #{ypos1 - stroke_width}"
  - points_spacing = "#{xpos1 + spacingoffsetx},#{ypos1 - stroke_width * 3 - 1} #{xpos1 + spacingoffsetx},#{ypos2 + border_width * 2} #{xpos2 + spacingadjustx},#{ypos1 - border_width} #{xpos1 + spacingoffsetx}, #{ypos1 - stroke_width * 3 - 1}"

  %svg{ :xmlns => "http://www.w3.org/2000/svg", :width => svg_size, :height => svg_size, :class => "t-bubble", :version => "1.1", :baseProfile => "full" }
    - transform = "scale(-1, 1) translate(#{-svg_size}, 0)"
    %g{ :transform => "#{ left ? '' : transform}" }
      %polygon{ :class => "t-bubble-spacing", :points => points_spacing }
      %polygon{ :class => "t-bubble-border", :points => points_border }
      %polygon{ :class => "t-bubble-inner", :points => points, :filter => "url(#bubble_gradient)" }
    


