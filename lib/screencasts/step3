
#####
# config

# By default, this script will only launch and control a safari instance. 
# Setting 'record_video' will also cause a screen recording to be created. 
record_video = true

export_to = File.absolute_path(File.join(File.dirname(screenplay), 'exports', File.basename(screenplay)))


# height of safari window bar + toolbar + apple menu
y_offset = 63

# shaves off rounded window corners
window_padding = 5 

# controls the size and location of the screencast main area
x, y, width, height = [window_padding, y_offset, 1280, 1280 * 9 / 21] 


#####
# Screencast guts

if record_video
  plugin "quicktime"
  start_recording(x, y, width, height)
  pause 2
end

plugin "safari"

launch "Safari", at(x - window_padding, y - y_offset, width + window_padding * 2, height + y_offset + window_padding + 200) 

perform "loading page" do
  url "http://localhost:3000?domain=washington-policy-coalition"
  pause 2
  wait_for_element('.histogram')
  pause 1
end

perform "Let's make sure we're logged in" do
  wait_for_element('#user_nav')
  move to_element('.profile_anchor.login'), {:speed => 1} rescue skip
  click
  wait_for_element('#user_email')
  move to_element('#user_email'), {:speed => 1}
  click
  type "test@test.dev.ghost", {:speed => 1}
  move to_element('#user_password'), {:speed => 1}
  click
  type "testtest", {:speed => 1}

  move to_element('.primary_button'), {:speed => 1}
  click
  wait_for_element('.histogram')
end


###############

wait_for_element('.histogram')
pause 180

at_end_of_movie do
  if record_video
    puts "Exporting to #{export_to}"
    stop_recording(export_to)
  end
end
