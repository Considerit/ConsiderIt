%script{ :type => "text/template", :id => "tpl_comments_view" } 

  .m-point-discussion-heading
    Discussion

  %ul.m-point-comments

  .m-new-comment            

    (( if( is_logged_in ) { ))    
    %span.avatar.m-new-comment-avatar{ :id => "avatar-{{user.id}}", :alt => "{{user.get('name')}}'s profile picture"}
    (( } else { ))
    %span.avatar.m-new-comment-avatar
    (( } ))


    .m-new-comment-body

      (( if( comments_open) { ))

      %textarea.m-new-comment-body-field.is_counted{ :name => :body, :placeholder => 'Type your comment here...', :title => 'Type your comment here...' }
      %span.count
        1000

      (( if( is_logged_in ) { ))
      .m-new-comment-submit-wrap
        %span.m-new-comment-civility-reminder
          Thanks for being civil!

        %button.m-new-comment-submit.button
          Add comment

      (( } else { ))
      .m-login
        You must 
        = surround '' do 
          %a.m-login-signin{:'data-target' => 'login'}
            Sign In
        to leave a comment.
      (( } ))
      (( } else { ))
      This conversation has concluded.
      (( } ))


%script{ :type => "text/template", :id => "tpl_comment_view" }   
  
  (( if( moderation_status == 0 ){ ))
  %i
    This comment has been hidden because it contains a personal attack, is inappropriate (e.g. advertising), or is wildly offtopic.
  ((} else { ))

  %a.avatar.m-comment-avatar{ :id => "avatar-{{user.id}}", :alt => "{{user.name}}'s profile picture", :'data-id' => "{{user.id}}", :'data-target' => "user_profile_page"}

  .m-comment-body-wrap
    .m-comment-body
      {{body}}

    .m-comment-footer
      .m-comment-author
        &ndash; 
        %a{ :href => "{{Routes.profile_path(user.id)}}", :'data-id' => "{{user.id}}", :'data-target' => "user_profile_page"}
          {{ user.name }}

      .m-thank

        (( if(can_thank && !user_thanked){ ))
        %button.thank
          thanks

        (( } else if(user_thanked){ ))

        %a.unthank
          undo thank
        (( } )) 

      (( if(thanks.length > 0 ) { ))
      .m-thank-given      

        %ul
          (( thanks.each( function(thank){ ))
          %li.l-thanks-item
            %span.avatar{ :'data-target' => "user_profile_page", :'data-id' => "{{thank.get('user_id')}}", :id => "avatar-{{thank.get('user_id')}}", :class => "participant"}
          (( }); ))
        %span.given_thanks
          {{ thanks.length }} {{ thanks.length == 1 ? 'person says' : 'people say' }} thanks
      (( } ))


  (( } ))


