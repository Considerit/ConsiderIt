:javascript
  $j(document).ready(function(){

    // INITIALIZE SLIDERS
    var params = { 
      min: -1.0, 
      max: 1.0, 
      value: #{-1 * @position.stance}, 
      step: .015,
      slide: function(event, ui) {
        $j('.slider').each(function(){
          if ( ui.value != $j(this).slider('value') ) {
            $j(this).slider("option", "value", ui.value);
            ConsiderIt.positions.set_slider_value(ui.value);
          }
        });
      },
      change: function(event, ui) {
        value = ui.value
        ConsiderIt.positions.set_slider_value(value);
      },
      stop: function(event, ui){
        //if (ConsiderIt && ConsiderIt.study) {
        //  $j.post('/home/study/2', {
        //    position_id: #{@position.id},
        //    proposal_id: #{@proposal.id},
        //    ival: $j(this).attr('id').substring(6),
        //    fval: ui.value
        //  });   
        //}
      }
    };

    $j(".slider").slider(params);
    ConsiderIt.positions.set_slider_value(#{-1 * @position.stance});
      
    // Study delegators for point expansions
    //if (ConsiderIt && ConsiderIt.study) {
    //  $j(document).delegate('.point_in_list a.toggle', 'click', function(){
    //    $j.post('/home/study/1', {
    //      position_id: #{@position.id},
    //      proposal_id: #{@proposal.id},
    //      point_id: $j(this).parents('.point_in_list').find('.id:first').text(),
    //      bval: $j(this).hasClass('more')
    //    });   
    //  });
    

  });

- entity = @proposal.entity || 'Proposal'
- slider_prompt = @proposal.slider_prompt || "What is your current opinion of this #{entity}?"
- considerations_prompt = @proposal.considerations_prompt || "What are the most important factors in your decision?"
- statement_prompt = @proposal.statement_prompt || "What are your overall thoughts on this paper?"


#craft_position
  = render :partial => "proposals/description", :locals => { :hide_initially => false }
  
  %ol

    = render :partial => "positions/slider", :locals => { :id => 1, :number => 1, :prompt => slider_prompt }

    = render :partial => "positions/considerations", :locals => { :number => 2, :prompt => considerations_prompt }

    = render :partial => "positions/slider", :locals => { :id => 2, :number => 3, :prompt => "Update your stance, if it has changed." }
    
    - if @proposal.enable_position_statement
      = render :partial => "positions/statement/create", :locals => { :number => 4, :prompt => statement_prompt}

    %li#submitstance.step
      .rest

        .stanceform

          - if @user
            = form_for [@proposal, @position] do |f|
              = render :partial => "positions/submit", :locals => { :f => f }

          - else
            = form_for :position, :url => proposal_positions_path(@proposal), :remote => true do |f|
              = render :partial => "positions/submit", :locals => { :f => f }

              #position_save_login_trigger.user_dialog

              :javascript
                $j('#position_save_login_trigger').dialog({
                  autoOpen: false,
                  modal: true,
                  draggable: false,
                  dialogClass: 'alert',
                  width: 775
                });

                $j('.stanceform input.submit').click(function(){
                  $j('#position_save_login_trigger')
                    .load("#{new_user_registration_path(:third_party=>false, :context=>"position_submit")}")
                    .dialog('open');
                  return true;
                });
                  
    :javascript
      $j('li.statement.step textarea').change(function(){
        var statement = $j(this).val();
        $j('form .stance.position_statement textarea').val(statement);
      });  
