:javascript
  $(document).ready(function(){

    //var proposals = { ActiveSupport::JSON.encode(ActiveRecord::Base.connection.select("SELECT id, long_id, activity, additional_details,category,created_at,contested,description,designator,long_description,name,short_name,trending,updated_at,url,user_id, active FROM proposals where account_id=#{current_tenant.id} AND active=1")) };

    //var proposals = [];

    proposals = #{@proposals.to_json};
    ConsiderIt.proposals = [];

    var current_proposal = #{ @current_proposal ? @current_proposal.to_json : 'null' };
    var current_proposal_model = null;

    for(var long_id in proposals){
      var prop = proposals[long_id];
      proposal = new ConsiderIt.Proposal(prop.model.proposal, prop.top_con ? prop.top_con.point : null, prop.top_pro ? prop.top_pro.point : null);


      if( current_proposal && current_proposal.long_id == long_id) {
        current_proposal_model = proposal;
      }

      ConsiderIt.proposals.push(proposal);
      

    }

    //var users = { User.select("id, name, avatar_file_name").to_json };
    var users = #{@users};
    ConsiderIt.users = _.object(_.map(users, function(v){ return [v.id, new ConsiderIt.User(v)];})) ;
    ConsiderIt.users[-1] = new ConsiderIt.User({name: 'Anonymous'});

    ConsiderIt.comments = {}
    //ConsiderIt.current_tenant = new ConsiderIt.Account()

    ConsiderIt.current_tenant = new ConsiderIt.Account({
        id : "#{current_tenant.id}",
        identifier : "#{current_tenant.identifier}",
        assessment_enabled : #{current_tenant.assessment_enabled},
        enable_moderation : #{current_tenant.enable_moderation}
    });

    ConsiderIt.roles = {
      is_admin : false,
      is_moderator : false,
      is_analyst : false,
      is_evaluator : false,
      is_manager : false
    }

    ConsiderIt.current_user = #{current_user ? "ConsiderIt.users[#{current_user.id}]" : 'new ConsiderIt.User'};

    //TODO: filter data
    #{current_user ? "ConsiderIt.update_current_user( { user: #{current_user.to_json(:methods => :third_party_authenticated)}.user, follows: #{current_user.follows.all.to_json} })" : ''}
    

    ConsiderIt.limited_user = #{@limited_user ? "ConsiderIt.users[#{@limited_user.id}]" : 'null'};
    ConsiderIt.limited_user_email = "#{@limited_user_email ? @limited_user_email : 'null'}";
    #{@limited_user ? "ConsiderIt.limited_user.set( { google_uid: '#{@limited_user.google_uid}', facebook_uid: '#{@limited_user.facebook_uid}', twitter_uid: '#{@limited_user.twitter_uid}'  })" : ''}

    #{@limited_user ? "ConsiderIt.limited_user.set_follows(#{@limited_user_follows.to_json})" : 'null'};

    ConsiderIt.password_reset_token = #{@reset_password_token ? "'#{@reset_password_token}'" : 'null'};  


    ConsiderIt.router = new ConsiderIt.Router();

    ConsiderIt.app = new ConsiderIt.AppView();

    if (current_proposal_model ) { 
      current_proposal_model.set_data( current_proposal.data);
    }

    ConsiderIt.app.render();

    Backbone.history.start({pushState: true});



  });

