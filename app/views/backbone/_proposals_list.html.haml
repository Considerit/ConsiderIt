%script{ :type => "text/template", :id => "tpl_proposals_region_layout"}

  #m-homepage-proposals
    #m-proposals-container
    #m-proposals-container-completed

%script{ :type => "text/template", :id => "tpl_proposals_list_create"}
  .m-proposals-new
    %button.m-new-proposal-submit
      Start a new conversation


%script{ :type => "text/template", :id => 'tpl_proposals_list_layout'}
  .m-proposals-create
  .m-proposal-list-region

  .m-proposals-operations
    .m-proposals-filters
    .m-proposals-list-pagination
  

%script{ :type => "text/template", :id => 'tpl_proposals_list'}


  (( if( !is_active ){ ))
  .m-proposals-container-completed-header
    %hr
    %h2
      Past conversations
  (( } ))

  %ul.m-proposal-list



%script{ :type => "text/template", :id => 'tpl_proposals_list_filters'}
  .m-proposals-sort-container
    .title
      Sort by: 
    (( _.each(sortable_fields, function(sort) { ))
    %a{:'data-target' => "{{ sort.target }}", :'data-type' => 'sort', :class => "m-proposallist-sort"}
      {{ sort.name }}
    (( }) ))



%script{ :type => "text/template", :id => "tpl_proposal_list_pagination"}
  .m-proposals-list-pagination-wrap
    (( if (data_loaded) { ))
    %span.m-proposals-list-pagination-pages
      (( if (currentPage != 1) { ))
      %span.m-proposals-list-pagination-jump-left
        %a.m-proposals-list-pagination-jump{:'data-target'=> 'proposallist:first'}
          &laquo; First
        %a.m-proposals-list-pagination-jump{:'data-target'=> 'proposallist:prev'}
          &laquo;
      (( } ))
      (( _.each (page_set, function (p) { ))
      (( if (currentPage == p) { ))
      %span.selected
        {{ p }}
      (( } else { ))
      %a.m-proposals-list-pagination-page{:'data-target' => 'proposallist:page', :'data-page' => "{{p}}"}
        {{ p }} 
      (( } ))
      (( }); ))
      (( if (lastPage != currentPage && lastPage != 0) { ))
      %span.m-proposals-list-pagination-jump-right
        %a.m-proposals-list-pagination-jump{:'data-target'=> 'proposallist:next'}
          &raquo;
        %a.m-proposals-list-pagination-jump{:'data-target'=> 'proposallist:last'}
          Last &raquo;

      (( } ))

    .m-proposals-list-pagination-current
      %span.current
        {{ (currentPage - 1) * pageSize }}
      &ndash;
      %span.perpage
        {{ currentPage * pageSize }} 
      of
      %span.total
        {{ totalRecords }} 
      shown.
    (( } else { ))
    %button.m-pointlist-pagination-showmore
      {{ prompt }} 
    (( } ))




%script{ :type => "text/template", :id => "tpl_proposal_summary"}
  .l-content-wrap

    .l-message.m-proposal-message.m-proposal-introduction
      .l-message-speaker.left.l-message-initiator
        %a{ :'data-id' => "{{user_id}}", :'data-target' => "user_profile_page" }
          %img{:src => "{{ avatar }}"}
      .l-message-body.left.down.m-proposal-description
        = render :partial => "shared/bubble", :locals => {:left => true, :down => false}

        .l-message-title.m-proposal-description-title

        %span.m-proposal-description-title-readmore
          [read more]
        .l-message-details.m-proposal-description-body

        .m-proposal-description-details

          (( _.each(description_detail_fields, function(field) {  ))

          (( if( $.trim(field[2]) != '') { ))
          .m-proposal-description-detail-field
            .m-proposal-description-detail-field-heading
              {{ field[1] }}
              %a.hidden
                show
            .m-proposal-description-detail-field-full.hide
              %div{ :class => "m-proposal-description-detail-field-{{field[0]}}" }
                {{ field[2] }}
              %a.hidden
                show
          (( } ))

          (( }); ))

      .l-message-recipient

    (( if(!published){ ))

    .m-proposal-strip_publish
      = form_for :proposal, :url => "{{Routes.proposal_path(long_id)}}", :method => :put, :remote => true, :html => {:class => 'm-proposal-publish-form'} do |f|
        = f.hidden_field :published, :value => true

        = f.submit 'Publish this new conversation', :class => 'm-proposal-publish'

      -# = link_to "cancel", "{{Routes.proposal_path(long_id)}}", :confirm => "Canceling will permanently delete this conversation. Are you sure?", :method => :delete, :remote => true, :class => 'm-delete_proposal'

    (( } ))  




  %script{ :type => "text/template", :id => "tpl_proposal_admin_strip" }
    .m-proposal-admin_strip.m-proposal-strip
      %span.m-proposal-admin_label
        Conversation settings:

      .m-proposal-admin-publicity.l-dialog-prompt
        %a.m-proposal-admin_operations-publicity.l-dialog-prompt-label
          //Sharing is 
          %span
            (( if(publicity == 2) { ))
            publicly accessible
            (( } else if(publicity == 1){ ))
            accessible by link only
            (( } else { ))
            private
            (( } ))

      .m-proposal-admin-status.l-dialog-prompt
        %a.m-proposal-admin_operations-status.l-dialog-prompt-label
          //Status is 
          %span
            (( if(active){ ))
            active
            (( } else { ))
            inactive
            (( } ))


      = link_to "Delete conversation", "{{Routes.proposal_path(long_id)}}", :confirm => "Are you sure you wish to permanently delete this conversation?", :method => :delete, :remote => true, :class => 'm-delete_proposal'


  %script{ :type => "text/template", :id => "tpl_proposal_admin_strip_edit_publicity" }

    = form_for :proposal, :url => "{{Routes.proposal_path(long_id)}}", :method => :put, :remote => true, :html => {:class => 'm-proposal-admin_operations-settings-form'} do |f|
      .radio_block
        .option
          (( if(publicity == 2) { ))
          = f.radio_button :publicity, '2', :value => '2', :checked => true
          (( } else { ))
          = f.radio_button :publicity, '2', :value => '2'
          (( } ))

          = f.label :publicity, 'Public', :value => '2'
          .sublabel
            It will be accessible on the homepage.

        .option
          (( if(publicity == 1) { ))
          = f.radio_button :publicity, '1', :value => '1', :checked => true
          (( } else { ))
          = f.radio_button :publicity, '1', :value => '1'
          (( } ))

          = f.label :publicity, 'Anyone with a link', :value => '1'
          .sublabel
            Only people that have a link to this proposal will be able to access it.

        .option
          (( if(publicity == 0) { ))
          = f.radio_button :publicity, '0', :value => '0', :checked => true
          (( } else { ))
          = f.radio_button :publicity, '0', :value => '0'
          (( } ))

          = f.label :publicity, 'Private', :value => '0'
          .sublabel
            Restrict access to the following invited participants.

          .access_list
            .label
              Comma-separated email list of invited users:
            = f.text_area :access_list, :rows => 2, :class => "autoResize"

      .save_block
        = f.submit 'save'
        %a.cancel{:'data-target' => "dialog-close"}
          cancel
        }

  %script{ :type => "text/template", :id => "tpl_proposal_admin_strip_edit_active"}

    = form_for :proposal, :url => "{{ Routes.proposal_path(long_id) }}", :method => :put, :remote => true, :html => {:class => 'm-proposal-admin_operations-settings-form'} do |f|
      .radio_block
        .option
          (( if(active) { ))
          = f.radio_button :active, true, :value => true, :checked => true
          (( } else { ))
          = f.radio_button :active, true, :value => true
          (( } ))
          = f.label :active, 'Active', :value => true
          .sublabel
            Contributions are open. People with access to this proposal can contribute to it.
        .option
          (( if(active) { ))
          = f.radio_button :active, false, :value => false
          (( } else { ))
          = f.radio_button :active, false, :value => false, :checked => true
          (( } ))
          = f.label :active, 'Inactive', :value => false
          .sublabel
            Contributions are closed. People with access to this proposal will only be able to view it. 

      .save_block
        = f.submit 'save'
        %a.cancel{:'data-target' => "dialog-close"}
          cancel

