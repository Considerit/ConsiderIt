%li.comment{ :id=>"comment-#{comment.id}" }
  
  .comment_body
    - if comment.violation || comment.user.nil?
      .subject_line
        - if comment.subject && comment.subject.length > 0
          %h3.subject
            Thread closed  
      .body_row
        .user
          - if comment.user.nil?
            .avatar
            .username
              Account was deleted
          - else
            .avatar
              - if comment.user.avatar
                = image_tag comment.user.avatar.url(:midsmall), :alt => "#{h comment.user.name}'s profile picture"
            .username
              = h comment.user.name
        .text.comment_text    
              
          .body  
            This comment has been removed because it violates one or more of our community rules, such as containing advertising or other inappropriate material.
        .clear
          
    - else
      .subject_line{:class => "#{comment.point_id.nil? ? 'unaffiliated': comment.point.is_pro ? 'pro' : 'con'}"}
        - if comment.subject && comment.subject.length > 0
          %h3.subject
            = h comment.subject          
      .body_row
        .user
          - if comment.user.nil?
            .avatar
            .username
              Account was deleted
          - else
            .avatar
              - if comment.user.avatar
                = image_tag comment.user.avatar.url(:midsmall), :alt => "#{h comment.user.name}'s profile picture"
            .username
              = h comment.user.name
        .text.comment_text   
          .triangle
            &#x25c0;
          .body
            = h comment.body

        .clear
      .reply_row
        %a.reply.write_comment_reply{ :title => "Write a response to #{h comment.user.first_name}" }
          reply to #{h comment.user.first_name}
        %ul.reply.hide
          = render :partial => "comments/new_comment", :locals => { :point => nil, :new_thread => false, :parent_id => comment.id, :comment => comment }

  %ul.comment_children
    - comment.children.each do |child|
      = render :partial => "comments/comment", :locals => { :comment => child, :child => true }
          