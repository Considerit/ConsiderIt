%script{ :type => "text/template", :id => "tpl_dashboard_moderate"}

  .m-dashboard-heading
    %h2
      Moderation Interface

    .m-dashboard-subheading
      Fail posts with personal attacks, or wildly off-topic/inappropriate material.        

  .m-moderate_hide-moderated
    = check_box_tag 'hide_moderated', nil, true
    = label_tag 'hide_moderated', 'hide already moderated content'

  #tabs
  #moderations


%script{ :type => "text/template", :id => "tpl_moderate_tab"}
  (( _.each(classes_to_moderate, function(mc, idx){  ))
  %a{:class => 'm-moderation-tab inactive', :class_name => "{{ mc }}"}
    %span.name
      {{ mc }}
    = surround '(', ')' do
      {{ unmoderated[mc] }}
  (( }); ))





%script{ :type => "text/template", :id => "tpl_moderate_item_view"}

  #m-moderatable-text-region

    .m-moderatable-fields
      (( _.each( moderated_fields, function(field) {  ))
      (( if( field.length > 0 ) { ))
      .m-moderatable-field
        {{ field.replace(/(<([^>]+)>)/ig,"") }}
      (( } ))              
      (( }); ))

    .meta
      %a.m-moderate-context_link{ :href => "{{ url }}"}
        {{ anchor }}

      (( if (user) { ))
      |
      %span.by
        moderated by {{ user.name }}
      (( } ))


  #m-moderatable-form-region
    = form_for :moderate, :url => "{{Routes.dashboard_moderate_create_path()}}", :method => :post, :remote => true, :html => { :class => 'm-moderate-form' } do |f|
      = f.hidden_field :moderatable_id, :value => "{{moderatable_id}}"
      = f.hidden_field :moderatable_type, :value => "{{moderatable_type}}"
      = f.hidden_field :status, :value => "{{ status }}"


      %button{:class => "pressable_button pass"}
        Pass
      %button{:class => "pressable_button fail"}
        Fail

      = f.submit 'done', :class => 'hide'


