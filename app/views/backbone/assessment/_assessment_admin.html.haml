
%script{ :type => "text/template", :id => "tpl_dashboard_assess"}
  #assess


%script{ :type => "text/template", :id => "tpl_assess_list_item"}

  %td.desc
    {{ root_object.short_name }}
  %td
    {{ new Date(created_at).toDateString() }}

  %td

    (( if( claimed ) { ))
    (( if( claimed_by_logged_in_user ) { ))
    = form_for :assessment, :method => :put, :remote => true, :url => "{{Routes.assessment_path( id )}}" do |f|
      = f.hidden_field :id, :value => "{{ id }}"
      = f.hidden_field :user_id, :value => nil

      = f.submit 'Unclaim it', :class => 'take_responsibility'
    (( } else { ))                                 
    {{ claimed_by }}
    (( } ))
    (( } else { ))
    = form_for :assessment, :method => :put, :remove => true, :url => "{{Routes.assessment_path(id)}}" do |f|
      = f.hidden_field :id, :value => "{{ id }}"
      = f.hidden_field :user_id, :value => "{{ current_user }}"

      = f.submit 'I\'ll do it', :class => 'take_responsibility'
    (( } ))

  %td
    {{ status }}
  %td
    %a.m-assessment-edit{ :'data-id' => "{{ id }}", :href => "{{ Routes.edit_assessment_path(id) }}"}
      Edit

%script{ :type => "text/template", :id => "tpl_assess_list"}


  .m-dashboard-heading
    %h2
      Fact Checking Interface

    .m-dashboard-subheading
      Accept responsibility for an assessment, determine which claims can be checked, and complete the check. 

  .m-dashboard-assess-hide_completed
    = check_box_tag 'hide_completed', :checked => false
    = label_tag 'hide_completed', 'hide completed'


  #assess_points.assessment_block{ :class_name => 'point' }

    %table.table.table-condensed.table-striped
      %thead
        %tr
          %th.header
            Proposal
          %th.header
            Requested at
          %th.header
            Responsible?
          %th.header
            Status
          %th.view

            
      %tbody


%script{ :type => "text/template", :id => "tpl_dashboard_assess_edit_layout"}

  #edit_assessment

    .m-dashboard-heading
      %h2
        Assess claims

      .m-dashboard-subheading
        Check the claims made in this point

    #main
      #context-region
      #requests-region
      %hr
      #claims-region
      #assessment-footer-region

%script{ :type => "text/template", :id => "tpl_claim" }
  .assessment-gutter
    %span.avatar{ :'data-target' => "user_profile_page", :'data-id' => "{{creator.id}}", :id => "avatar-{{creator.id}}"}

  .assessment-context
    .assessment-claim
      Claim : {{ claim_restatement }}

    .assessment-context-content
      (( if( verdict ){ ))
      .assessment-result
        %emph
          Evaluation: {{ format_verdict }}
      (( } ))

      .assessment-body
        {{ result }}


      (( if( notes ){ ))
      .assessment-body
        %strong
          Private notes. 
        {{ notes }} 
      (( } ))

    .assessment-footer
      %span.assessment-footer-link
        %a.answer
          {{ !verdict ? 'Answer' :'Edit' }}

      (( if(!assessment.complete){ ))  
      %span.assessment-footer-link
        %a.delete
          Delete
      (( } ))




%script{ :type => "text/template", :id => "tpl_claims_list"}
  %ul

  %button.button.add_claim
    Add a new claim to research and evaluate

%script{ :type => "text/template", :id => "tpl_edit_claim_form"}

  = form_for :claim, :remote => true, :url => "{{Routes.assessment_update_claim_path(assessment.id, id)}}", :html => { :class => 'm-assessment-claim-update'} do |f|

    .claim_block
      = f.label :claim, 'The claim restatement'
      = f.text_area :claim, :class => 'autoResize', :value => "{{ claim_restatement }}"

    .radio_block
      = f.radio_button :verdict, 'accurate', :value => '2'
      = f.label :verdict, 'accurate', :value => 'accurate'

      = f.radio_button :verdict, 'unverifiable', :value => '1'
      = f.label :verdict, 'unverifiable', :value => 'unverifiable'

      = f.radio_button :verdict, 'questionable', :value => '0'
      = f.label :verdict, 'questionable', :value => 'questionable'

    .assessment_block
      = f.label :result, 'The assessment'
      = f.text_area :result, :class => 'autoResize', :value => "{{ result }}"

    .private_note_block
      = f.label :notes, 'Private notes'
      = f.text_area :notes, :class => 'autoResize', :value => "{{ notes }}"

    = f.submit :class => 'button'
    %a.cancel
      cancel


%script{ :type => "text/template", :id => "tpl_claim_form"}
  .assessable
    %blockquote
      {{ assessable.get('nutshell') }}
      {{ assessable.get('text') }}

  .claim-restatement
    = label_tag :claim_restatement, 'Restate the specific claim that you will research and evaluate'
    = text_area_tag :claim_restatement, nil, :required=>true, :maxlength => 140, :pattern => "^.{3,}", :class => 'autoResize'

  .submit_block
    %button.button.create_new_claim
      Create new claim

  #other_claims

    = label_tag :copy_id, '...or copy a claim from a different pro/con point'

    %select{ :id => "claim_copy_id", :name => "claim[copy_id]" } 
      (( all_claims.each(function(clm){ ))
      %option{ :value => "{{clm.id}}"}
        {{ clm.get('claim_restatement') }}
      (( }); ))

    .submit_block
      %button.button.copy_new_claim
        Copy this claim


%script{ :type => "text/template", :id => "tpl_assess_edit_context"}
  .assessment-gutter

    %span.avatar{ :'data-target' => "user_profile_page", :'data-id' => "{{author.id}}", :id => "avatar-{{author.id}}"}


  .assessment-context
    .assessment-header
      {{author.firstName()}} writes, regarding 
      = succeed ':' do
        %a{ :href => "{{Routes.proposal_path(root_object.long_id)}}", :target => "_blank" }
          {{root_object.short_name}}

    .assessment-context-content
      .assessment-nutshell
        {{ assessable.nutshell }}
      (( if (assessable.text && assessable.text.length > 0) { ))
      .assessment-body
        {{ assessable.text }} 
      (( } ))    
    .assessment-footer
      .assessment-footer-link
        = link_to 'Read point in context', "{{Routes.proposal_point_path(root_object.long_id, assessable.id)}}", :target => "_blank"
      .assessment-footer-link
        %a
          Email the author


%script{ :type => "text/template", :id => "tpl_assess_request"}
  .assessment-gutter
    %span.avatar{ :'data-target' => "user_profile_page", :'data-id' => "{{requester.id}}", :id => "avatar-{{requester.id}}"}

  .assessment-context
    .assessment-header
      {{requester.firstName()}} requests further research about the above point:

    .assessment-context-content
      .assessment-nutshell
        {{ suggestion }}

    .assessment-footer
      .assessment-footer-link
        %a
          Email the requester


%script{ :type => "text/template", :id => "tpl_assess_edit_forms"}

  (( if( can_publish ){ ))
  .complete
    = form_for :assessment, :method => :put, :remote => true, :url => "{{Routes.assessment_path(id)}}", :html => {:class => 'm-assessment-update'} do |f|
      = f.hidden_field :complete, :value => true
      = f.hidden_field :id, :value => "{{ id }}"
      = f.submit "{{ submit_text }}", :class => 'button'
  (( } else if ( reviewable ){ ))
  .review
    = form_for :assessment, :method => :put, :remote => true, :url => "{{Routes.assessment_path(id)}}", :html => {:class => 'm-assessment-update'} do |f|
      = f.hidden_field :reviewable, :value => true
      = f.hidden_field :id, :value => "{{ id }}"
      = f.hidden_field :user_id, :value => "{{ current_user }}"
      = f.submit "{{ submit_text }}", :class => "button"
  (( } ))





