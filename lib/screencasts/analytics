#!/usr/bin/env ~/Documents/code/castanaut/bin/castanaut

#####
# Uses castanaut to automate a screencast in safari. The robot voice sections, 
# as created via while_saying, help to space out the video for timing
# purposes. 
#
#
# Installation:
#   - must be installed on a mac
#   - Castanaut should be installed from https://github.com/tkriplean/castanaut
#
# Execution:
#   - must be run on a mac
#   - /path/to/castanaut/bin/castanaut /path/to/this/file
#   - can be invoked from bin/screencast, but the path to in bin/screencast is
#     hardcoded for Travis...talk to him if you can't get it to run.  

# TODO: 
#  - refactor into general methods so we can create other screencasts or tests
#    more easily
#  - find a way to automatically destroy any opinions created here. 


#####
# Prep for this screencast: 
# 
# > rake prep_deathstar

#####
# config

# By default, this script will only launch and control a safari instance. 
# Setting 'record_video' will also cause a screen recording to be created. 
record_video = true

export_to = File.absolute_path(File.join(File.dirname(screenplay), 'exports', File.basename(screenplay)))


# height of safari window bar + toolbar + apple menu
y_offset = 63

# shaves off rounded window corners
window_padding = 15 

# controls the size and location of the screencast main area
x, y, width, height = [window_padding, y_offset, 1280, 720] 


#####
# Screencast guts

if record_video
  plugin "quicktime"
  start_recording(x, y, width, height)
  pause 2
end

plugin "safari"

launch "Safari", at(x - window_padding, y - y_offset, width + window_padding * 2, height + y_offset + window_padding) 

url "http://localhost:3000/bitcoin-unlimited?domain=bitcoin&results=true"


pause 2
wait_for_element('.cancel_opinion_button')
scroll_to('.cancel_opinion_button')
move to_element('.cancel_opinion_button')
click

pause 3
scroll_to ".filter_opinions_to", 0, 0
move to_element('[aria-label="Filter opinions to users"]', {:area => ['top', 'center'], :edge_offset => 0})
pause 3


move to_element('[aria-label="Filter opinions to users"]', {:area => ['bottom', 'center'], :edge_offset => 8}), {:speed => 1}
click 
move to_element('[aria-label="Filter opinions to users"]', {:area => ['top', 'center'], :edge_offset => 0}), {:speed => 5}
pause 3

move to_element('[aria-label="Filter opinions to developers"]', {:area => ['bottom', 'center'], :edge_offset => 8}), {:speed => 1}
click 
move to_element('[aria-label="Filter opinions to developers"]', {:area => ['top', 'center'], :edge_offset => 0}), {:speed => 5}
pause 3



at_end_of_movie do
  if record_video
    puts "Exporting to #{export_to}"
    stop_recording(export_to)
  end
end
