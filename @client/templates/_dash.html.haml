- providers = ['google', 'facebook', 'twitter']





%script{ :type => "text/template", :id => "tpl_dashboard_sidebar"}
  %ul
    %li.sidebar-image
      %img{:src => "{{ avatar }}"}

    (( if( is_self ) { ))
    %li
      %a.sidebar_link{:href => "{{Routes.profile_path(id)}}", :'action' => 'profile'}
        Profile
    
    %li
      %a.sidebar_link{:href => "{{Routes.edit_profile_path(id)}}", :'action' => 'edit_profile'}
        Edit profile

    %li
      %a.sidebar_link{:href => "{{Routes.edit_account_path(id)}}", :'action' => 'account_settings'}
        Account settings
    %li
      %a.sidebar_link{:href => "{{Routes.edit_notifications_path(id)}}", :'action' => 'email_notifications'}        
        Email notifications        

    (( } ))

  %hr

  // if admin ...
  %ul
    (( if(is_admin) { ))
    %li
      %a.sidebar_link{:href => "/dashboard/application", :'action' => 'app_settings'}
        App settings

    %li
      %a.sidebar_link{:href => "{{Routes.manage_roles_path()}}", :'action' => 'user_roles'}
        User roles

    (( } ))


    (( if( false && is_manager ) { ))

    %li
      %a.sidebar_link{:href => "/dashboard/proposals", :'action' => 'manage_proposals'}
        Manage proposals

    (( } ))

    (( if( (is_moderator ) ) { ))
    %li
      %a.sidebar_link{:href => "{{Routes.dashboard_moderate_path()}}", :'action' => 'moderate'}
        Moderate content
    (( } ))

    (( if( (is_evaluator ) && tenant.get('assessment_enabled') ) { ))
    %li
      %a.sidebar_link{:href => "{{Routes.assessment_index_path()}}", :'action' => 'assess'}
        Assess claims
    (( } ))

    (( if(  is_analyst ) { ))
    %li
      %a.sidebar_link{:href => "{{Routes.analytics_path()}}", :'action' => 'analyze'}
        Analytics
    (( } ))

    (( if(  is_manager ) { ))
    %li
      %a.sidebar_link{:href => "{{Routes.import_data_path()}}", :'action' => 'import_data'}
        Import data
    (( } ))

    (( if(is_admin) { ))
    %li
      %a.sidebar_link{:href => "/dashboard/database", :target => "_blank"}
        Database
    (( } ))

    (( if(is_developer) { ))
    %hr

    %li
      %a.sidebar_link{:href => "{{Routes.client_error_path()}}", :'action' => "client_errors"}
        Client errors
    (( } ))

    - if Rails.env.development?
      %li
        = link_to 'Tune', '/newrelic', :target => "_blank", :class => 'sidebar_link'

%script{ :type => "text/template", :id => "tpl_dashboard_container"}
  #dashboard

    .dashboard-sidebar-region

    .dashboard-main-region

    .clear

%script{ :type => "text/template", :id => "tpl_dashboard_unauthorized"}

  .dashboard-heading
    %h2
      Not allowed!

    .dashboard-subheading
      Please sign in first to access this functionality.


%script{ :type => "text/template", :id => "tpl_dashboard_profile"}
  (( var max_length_root = 35, max_length_content = 65; ))

  .dashboard-heading
    %h2
      {{ name }} 

    .dashboard-subheading
      %p
        joined {{ joined_at }}

      %p
        (( if(bio && bio.length > 0) { ))
        {{ bio }} 
        (( } else { ))
        %span.empty
          No details provided
        (( } ))

      (( if ( is_self ) { ))
      %a.dashboard-profile-edit_profile{:href => "{{Routes.edit_profile_path(id)}}", :'action' => 'edit_profile'} edit
      (( } ))

  .dashboard-profile-bio

  (( if(_.keys(influenced_users).length > 0){ ))
  .dashboard-profile-influence
    .dashboard-profile-influence-summary
      (( var influenced = _.keys(influenced_users).length; ))
      &#9733; {{ influenced }} {{ influenced == 1 ? 'person' : 'people'}} felt that one of {{ name }}'s pro & con contributions spoke for them
        
    .dashboard-profile-influenced.l-group-container
      (( _.each(influenced_users, function(p){ ))
      %span.avatar{ :'action' => "user_profile_page", :'data-id' => "{{p}}", :id => "avatar-{{p}}", :class => "participant", :style => "height:{{tile_size}}px; width:{{tile_size}}px;", :tooltip => "user_profile"}>
      (( }); ))        
  (( } ))

  .dashboard-profile-activities

    %ul.dashboard-profile-activity-summaries
      %li
        %a.dashboard-profile-activity-summary{ :'action' => 'proposals'}
          %span.activity-summary-count
            {{ proposals.length }}
          %span.activity-summary-label
            Conversations

      %li
        %a.dashboard-profile-activity-summary{ :'action' => 'opinions'}
          %span.activity-summary-count
            {{ opinions.length }}
          %span.activity-summary-label
            Opinions

      %li
        %a.dashboard-profile-activity-summary{ :'action' => 'points'}
          %span.activity-summary-count
            {{ points.length }}
          %span.activity-summary-label
            Pros & cons

      %li
        %a.dashboard-profile-activity-summary{ :'action' => 'comments'}
          %span.activity-summary-count
            {{ comments.length }}
          %span.activity-summary-label
            Comments

    .dashboard-profile-activity-block{ :'action' => 'proposals-details'}
      %h3
        Conversations started
      (( if(proposals.length > 0) { ))
      %table.table.table-condensed.table-striped
        %tbody
          (( proposals.each(function(proposal){ ))
          %tr
            %td.dashboard-profile-activity-substance-wrap
              .dashboard-profile-activity-substance
                {{ proposal.get('name') }}
            %td.dashboard-profile-activity-action
              %a{ :href => "{{ Routes.proposal_path(proposal.id) }}", :'data-id' => "{{ proposal.id }}" }
                View and consider
          (( }); ))
      (( } else { ))
      .dashboard-profile-activity-empty
        {{name}} has not put forward any proposals.
      (( } ))

    .dashboard-profile-activity-block{ :'action' => 'opinions-details'}

      %h3
        Opinions crafted

      (( if(opinions.length > 0){ ))
      %table.table.table-condensed.table-striped
        %tbody
          (( opinions.each(function(opinion){ ))
          (( var proposal = opinion.getProposal(); ))
          (( var route = Routes.user_opinion_proposal_path(proposal.id, id); ))
          %tr
            %td.dashboard-profile-activity-substance-wrap
              .dashboard-profile-activity-substance
                (( if( opinion.get('stance') < -.05 ) { ))
                Opposed
                (( } else if( opinion.get('stance') > .05 ) { ))
                Supported
                ((} else{ ))
                Neutral / undecided
                (( }))
              .dashboard-profile-activity-substance-context
                Re: {{ proposal.get('name') }}

            %td.dashboard-profile-activity-action
              %a{ :href => "{{ route }}", :'data-id' => "{{ opinion.id }}" }
                See why
          (( }); ))
      (( } else { ))
      .dashboard-profile-activity-empty
        {{name}} has not taken any opinions.
      (( } ))

    .dashboard-profile-activity-block{ :'action' => 'points-details'}
      %h3
        Pro/con points written

      (( if(points.length > 0){ ))
      %table.table.table-condensed.table-striped
        %tbody
          (( points.each(function(point){ ))
          (( var proposal = point.getProposal(); ))  
          (( var route = Routes.proposal_point_path(proposal.id, point.id); ))          
          %tr
            %td.dashboard-profile-activity-substance-wrap
              .dashboard-profile-activity-substance
                {{ point.get('category') }} {{ point.get('nutshell') }}
              .dashboard-profile-activity-substance-context
                Re: {{ proposal.get('name') }}

              .dashboard-profile-activity-influence
                (( var influenced = influenced_users_by_point[point.id].length; ))
                {{influenced}} {{ influenced == 1 ? 'person' : 'people' }} felt this point spoke for them
              .l-group-container
                (( _.each(influenced_users_by_point[point.id], function(p){ ))
                %span.avatar{ :'action' => "user_profile_page", :'data-id' => "{{p}}", :id => "avatar-{{p}}", :class => "participant", :style => "height:{{tile_size}}px; width:{{tile_size}}px;", :tooltip => "user_profile"}
                (( }); ))   

            %td.dashboard-profile-activity-action
              %a{ :href => "{{ route }}", :'data-id' => "{{ point.id }}" }
                Read and discuss
          (( }); ))
      (( } else { ))
      .dashboard-profile-activity-empty
        {{ name }} has not contributed any points.
      (( } ))

    .dashboard-profile-activity-block{ :'action' => 'comments-details'}
      %h3
        Comments

      (( if(comments.length > 0){ ))
      %table.table.table-condensed.table-striped
        %tbody
          (( comments.each(function(comment){ ))
          (( var point = comment.getRoot(); ))
          (( var proposal = point.getProposal(); ))
          (( var route = Routes.proposal_point_path(proposal.id, point.id); ))
          %tr
            %td.dashboard-profile-activity-substance-wrap
              .dashboard-profile-activity-substance
                {{ comment.get('body')}}
              .dashboard-profile-activity-substance-context
                Re: {{ point.get('is_pro') ? 'Pro' : 'Con' }} point "{{ point.get('nutshell') }}"
              .dashboard-profile-activity-substance-context
                Re: {{ proposal.get('name') }}
            %td.dashboard-profile-activity-action
              %a{ :href => "{{ route }}#comment_{{comment.id}}", :'data-id' => "{{ comment.id }}" }
                Join in
          (( }); ))
      (( } else { ))
      .dashboard-profile-activity-empty
        {{name}} has not made any comments.
      (( } ))


%script{ :type => "text/template", :id => "tpl_dashboard_edit_profile"}

  .dashboard-heading
    %h2
      Edit your Profile

    .dashboard-subheading
      Control the information that other people can see.

  .dashboard-edit-user

  = form_for(:user, :url => "{{ Routes.user_registration_path() }}", :method => :put, :remote => true, :html => { :multipart => true, :class => 'dashboard-edit-user' }) do |f|
  
    .field
      = f.label :name, "Name"
      = f.text_field :name, :pattern => "^.{1,}", :value => "{{ name }}"

    .field
      = f.label :bio, "About you"
      = f.text_area :bio, :rows => 5, :value => "{{ bio }}"
  
    .field
      = f.label :avatar, "Your picture" 
      %br
      = f.file_field :avatar, :title => 'Upload a profile picture'

    .save_block
      = f.submit "Save changes", :class => 'button'


%script{ :type => "text/template", :id => "tpl_dashboard_account_settings"}

  .dashboard-heading
    %h2
      Account Settings

    .dashboard-subheading
      Modify your authentication options.

  = form_for(:user, :url => "{{ Routes.user_registration_path() }}", :method => :put, :remote => true, :html => { :multipart => true, :class => 'dashboard-edit-user' }) do |f|

    .field
      = f.label :email, "Email address"
      = f.email_field :email, :value => "{{ email }}"
      .sublabel
        Your email will never be shared with other users or third parties

    (( if ( third_party_authenticated ) { ))
    .field
      Authorized via {{auth_method}}
    (( } else { ))
    .field
      = f.label :password, "New password"
      = f.password_field :password
    .field
      = f.label :password_confirmation, "Confirm new password" 
      = f.password_field :password_confirmation
    (( } ))

    .save_block
      = f.submit "Save changes", :class => 'button'

%script{ :type => "text/template", :id => "tpl_dashboard_email_notifications"}

  .dashboard-heading
    %h2
      Email Notification Settings
    .dashboard-subheading
      Control when email updates are sent to {{ email }}
    

  .field
    = form_for :follows, :url => unfollow_path, :remote => true, :as => :follow, :html => { :class => 'dashboard-notifications-unfollow_all'} do |f|
      = f.hidden_field :user_id, :value => "{{id}}"
      = f.hidden_field :unsubscribe_all, :value => true
      = f.submit "Unsubscribe to all notifications", :class => 'button', data: { confirm: "Are you sure you want to unsubscribe to all notifications? This is irreversable." }

  .dashboard-notifications-followable_group
    .dashboard-heading
      %h2
        Site-wide notifications

      .dashboard-subheading
        Receive an email whenever a new conversation is started.

      = form_for :follows, :url => unfollow_path, :remote => true, :as => :follow, :html => {:class => "dashboard-notifications-unfollow"} do |f|
        = f.hidden_field :user_id, :value => "{{ id }}"
        = f.hidden_field :followable_type, :value => "Account"
        = f.hidden_field :followable_id, :value => "{{ tenant_id }}"  
        = f.hidden_field :follow, :value => "{{ !account_follower }}"
        = f.submit "{{ submit_text }}", :class => 'button'      

  (( _.each( followable_types, function(followable_type){  ))
  .dashboard-notifications-followable_group
    .dashboard-heading
      %h2
        {{followable_type.label}}

      .dashboard-subheading
        {{followable_type.explanation}}

    .dashboard-notifications-table_wrap
      %table.table.table-condensed.table-striped
        %tbody
          (( var is_following = false; ))
          (( if(follows[followable_type.model]) { ))
          (( _.each( _.values(follows[followable_type.model]), function(obj){ ))

          (( if( obj.follow ){ ))
          (( is_following = true; ))

          (( var root_object = followable_objects[obj.followable_type][obj.followable_id][followable_type.model.toLowerCase()]; ))

          %tr.follow_row

            %td
              {{ root_object[followable_type.attribute] }}

            %td
              = form_for :follows, :url => unfollow_path, :remote => true, :as => :follow, :html => {:class => "dashboard-notifications-unfollow"} do |f|
                = f.hidden_field :user_id, :value => "{{id}}"
                = f.hidden_field :followable_type, :value => "{{obj.followable_type}}"
                = f.hidden_field :followable_id, :value => "{{obj.followable_id}}"  
                = f.submit "Unsubscribe", :class => 'button'

          (( } ))
          (( }); ))
          (( if( !is_following ){ ))
          Not following any {{followable_type.label}}
          (( } ))
          (( } ))
  (( }); ))

%script{ :id => 'tpl_dash_email_dialog_view', :type => 'text/template'}
  .message
    .message-preamble
      {{ preamble }}

    = form_for :message, :url => message_path, :remote => true, :as => :message, :html => { :class => 'message-form'} do |f|
      = f.hidden_field :sender, :value => "{{ sender }}"
      = f.hidden_field :recipient, :value => "{{ recipient }}"

      .message-subject
        = f.label :subject, 'Subject'
        = f.text_area :subject, :rows => 1, :value => "{{ subject }}"

      .message-body
        = f.label :body, 'Body'    
        = f.text_area :body, :rows => 10, :value => "{{ body }}"

      .message-footer
        = f.submit "Send", :class => 'button'

