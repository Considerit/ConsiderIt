- cache do 
  %script{ :type => "text/template", :id => "tpl_dashboard_moderate"}

    #moderate
      #heading
        %table
          %tr
            %td
              %h2
                Moderation Interface
              .subheader
                Fail posts with personal attacks, or wildly offtopic/inappropriate material.

            %td
              = check_box_tag 'hide_moderated'
              = label_tag 'hide_moderated', 'hide already moderated content'

      #tabs
        (( _.each(classes_to_moderate, function(mc, idx){  ))
        %a{:class => 'inactive', :class_name => "{{mc.name}}"}
          %span.name
            {{mc.name}}
          = surround '(', ')' do
            {{ _.size(objs_to_moderate[mc.name]) - _.size(existing_moderations[mc.name]) }}
        (( }); ))

      (( _.each( classes_to_moderate, function(mc){ ))   
      %div{:id => "moderate_{{mc.name}}", :class_name => "{{mc.name}}", :class => 'moderation_block'}

        %table.table.table-condensed.table-striped
                
          %tbody
            (( _.each( objs_to_moderate[mc.name], function(obj){ ))

            (( var existing_moderation = obj.id in existing_moderations[mc.name] ? existing_moderations[mc.name][obj.id].moderation : null, status = ''; ))
            (( var cclass = existing_moderation ? 'moderated' : 'not_moderated'; ))
            (( if(existing_moderation){ status = existing_moderation.status == 1 ? 'passed' : 'failed'; } ))
            %tr{:class => "moderation_row {{ cclass }} {{ status }}" }
              %td

                (( _.each( mc.text_fields, function(tf) {  ))
                (( if( obj[tf].length > 0 ) { ))
                .m-moderatable-field
                  %strong
                    {{tf}}:
                  {{ obj[tf].replace(/(<([^>]+)>)/ig,"") }}
                (( } ))              
                (( }); ))

                .meta
                  (( if( mc.name == 'Point' ) { ))
                  = link_to 'view context', "{{Routes.proposal_point_path(obj.proposal_id, obj.id)}}", :target => '_blank'
                  (( } else { ))
                  = link_to 'view context', "{{Routes.proposal_point_path(obj.proposal_id, obj.root_id)}}", :target => '_blank'
                  (( } ))


                  = form_for :moderate, :url => dashboard_moderate_create_path, :method => :post, :remote => true do |f|
                    = f.hidden_field :moderatable_id, :value => "{{obj.id}}"
                    = f.hidden_field :moderatable_type, :value => "{{mc.name}}"
                    = f.hidden_field :status, :value => "{{existing_moderation ? existing_moderation.status : null}}"

                    (( var pass_class = existing_moderation && existing_moderation.status == 1 ? 'selected' : ''; ))
                    (( var fail_class = existing_moderation && existing_moderation.status == 0 ? 'selected' : ''; ))

                    %button{:class => "pressable_button pass {{ pass_class }}"}
                      Pass
                    %button{:class => "pressable_button fail {{ fail_class }}"}
                      Fail

                    = f.submit 'done', :class => 'hide'

                    (( if (existing_moderation) { ))
                    .by
                      Moderated by {{ existing_moderation.user_id in ConsiderIt.users ? ConsiderIt.users[existing_moderation.user_id].get('name') : existing_moderation.user_id }}
                    (( } ))
            (( }) ))
      (( }); ))



