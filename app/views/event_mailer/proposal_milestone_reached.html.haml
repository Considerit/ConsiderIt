//*********************************************
// For the ConsiderIt project.
// Copyright (C) 2010 - 2012 by Travis Kriplean.
// Licensed under the AGPL for non-commercial use.
// See https://github.com/tkriplean/ConsiderIt/ for details.
//*********************************************

- num_positions = @proposal.positions.published.count
- stance_breakdown = @proposal.stance_fractions
- barheight = 100

%p.intro
  %strong
    = succeed ' ' do
      #{num_positions} 
  people have now weighed in on 
  - if @proposal.user_id
    = surround ' ', '\'s proposal '  do 
      %span.user_name=@proposal.user.username 
  %span.object
    "#{link_to @proposal.title, proposal_url(@proposal.long_id, :host => @host)}"

- height_scaler = stance_breakdown.max
- user_position = @user.positions.published.where(:proposal_id => @proposal.id).first

- if num_positions < 10
  
  .text_supporters

    %table
      %tr
        %th
          Support
        %td
          - users = @proposal.positions.published.where(:stance_bucket => 6).map {|x| x.user.short_name}.compact
          - users += @proposal.positions.published.where(:stance_bucket => 5).map {|x| x.user.short_name}.compact
          = users.join(', ')
      %tr
        %th
          Lean support
        %td
          - users = @proposal.positions.published.where(:stance_bucket => 4).map {|x| x.user.short_name}.compact
          = users.join(', ')

      %tr
        %th
          Neutral
        %td
          - users = @proposal.positions.published.where(:stance_bucket => 3).map {|x| x.user.short_name}.compact
          = users.join(', ')
      %tr
        %th
          Lean oppose
        %td
          - users = @proposal.positions.published.where(:stance_bucket => 2).map {|x| x.user.short_name}.compact
          = users.join(', ')
      %tr
        %th
          Oppose
        %td
          - users = @proposal.positions.published.where(:stance_bucket => 1).map {|x| x.user.short_name}.compact
          - users += @proposal.positions.published.where(:stance_bucket => 0).map {|x| x.user.short_name}.compact
          = users.join(', ')

- else
  .histogram
    %table
      %tr
        %td

        - stance_breakdown.reverse.each_with_index do |bucket_percentile, index| 
          - height = bucket_percentile/height_scaler

          %td.bar_cell
            .bar.empty{ :style => "height: #{barheight - height * barheight}px;"}

            .bar.full{ :style => "height: #{height * barheight}px;"}

        %td
      %tr.histogram_arrow
        %td.support
          = @proposal.slider_left || 'Support'

        - stance_breakdown.reverse.each_with_index do |bucket_percentile, index| 
          %td.spanner
            - if user_position && user_position.stance_bucket == 6 - index
              .personal_position.update
                #{link_to 'You', edit_proposal_position_url(@proposal.long_id, user_position)} &#8593;
                  
        %td.oppose
          = @proposal.slider_right || 'Oppose'

- notable_points = @proposal.notable_points
- if notable_points
  %table.notable_points
    %tr
      %td.notable_point.supporter{:valign => 'top'}       
        .notable_header
          Most important to supporters
        .object
          &ldquo;#{link_to notable_points[:important_for_supporters].nutshell, proposal_point_url(@proposal.long_id, notable_points[:important_for_supporters], :host => @host)}&rdquo;
          .user_name
            &ndash; #{notable_points[:important_for_supporters].user.username}

      %td.notable_point.opposer{:valign => 'top'}          
        .notable_header
          Most important to opposers
        .object
          &ldquo;#{link_to notable_points[:important_for_opposers].nutshell, proposal_point_url(@proposal.long_id, notable_points[:important_for_opposers], :host => @host)}&rdquo;
          .user_name
            &ndash; #{notable_points[:important_for_opposers].user.username}

    %tr
      %td.notable_point.common{:colspan => 2}
        .notable_header
          Common ground for supporters and opposers
        .object
          &ldquo;#{link_to notable_points[:common].nutshell, proposal_point_url(@proposal.long_id, notable_points[:common], :host => @host)}&rdquo;
          .user_name
            &ndash; #{notable_points[:common].user.username}        

.action_call.prominent
  .rest
    .call.prominent
      = link_to 'Explore & discuss the proposal', proposal_url(@proposal.long_id, :host => @host)
    .after
      The next update will be sent after #{@next_aggregate} people have weighed in.

.host
  #{@host}
  
= content_for :footer do
  = link_to 'Unsubscribe', unfollow_proposal_url(@proposal.long_id, :host => @host, :u => @user.id, :i => @proposal.id, :m => 'Proposal', :t => ApplicationController.token_for_action(@user.id, @proposal, 'unfollow') )
  to this proposal.