
#####
# config

# By default, this script will only launch and control a safari instance. 
# Setting 'record_video' will also cause a screen recording to be created. 
record_video = true

export_to = File.absolute_path(File.join(File.dirname(screenplay), 'exports', File.basename(screenplay)))


# height of safari window bar + toolbar + apple menu
y_offset = 63

# shaves off rounded window corners
window_padding = 5 

# controls the size and location of the screencast main area
x, y, width, height = [window_padding, y_offset, 1280, 1280 * 9 / 21] 


#####
# Screencast guts

if record_video
  plugin "quicktime"
  start_recording(x, y, width, height)
  pause 2
end

plugin "safari"

launch "Safari", at(x - window_padding, y - y_offset, width + window_padding * 2, height + y_offset + window_padding + 200) 

perform "loading page" do
  url "http://localhost:3000?domain=washington-policy-coalition"
  pause 2
  wait_for_element('.histogram')
  pause 1
end

perform "Let's make sure we're logged in" do
  wait_for_element('#user_nav')
  move to_element('.profile_anchor.login'), {:speed => 1} rescue skip
  click
  wait_for_element('#user_email')
  move to_element('#user_email'), {:speed => 1}
  click
  type "test@test.dev.ghost", {:speed => 1}
  move to_element('#user_password'), {:speed => 1}
  click
  type "testtest", {:speed => 1}

  move to_element('.primary_button'), {:speed => 1}
  click
  wait_for_element('.histogram')
end


###############

wait_for_element('.histogram')
execute_javascript("""
  [].forEach.call(document.querySelectorAll('.histogram .avatar'), function (el) {
  el.style.visibility = 'hidden';
});
""")
pause 1
scroll_to('article',3000,0)
pause 2
execute_javascript("""
  [].forEach.call(document.querySelectorAll('.histogram .avatar'), function (el) {
  el.style.visibility = 'visible';
});
""")
pause 2
execute_javascript("window.opinion_trickle();")

pause 60


url "http://localhost:3000/wash__1240?results=true&domain=washington-policy-coalition"
pause 2
wait_for_element('.cancel_opinion_button')
scroll_to('.cancel_opinion_button')
move to_element('.cancel_opinion_button')
click
pause 1

scroll_to 'header',0,0
execute_javascript("""
  [].forEach.call(document.querySelectorAll('.histogram .avatar'), function (el) {
  el.style.visibility = 'hidden';
});
[].forEach.call(document.querySelectorAll('.community_point'), function (el) {
    el.style.visibility = 'hidden';
  });
""")
pause 2
scroll_to ".histogram", 3000, -40
pause 2
execute_javascript("""
  [].forEach.call(document.querySelectorAll('.histogram .avatar'), function (el) {
    el.style.visibility = 'visible';
  });
[].forEach.call(document.querySelectorAll('.community_point'), function (el) {
    el.style.visibility = 'visible';
  });
""")
execute_javascript("window.opinion_trickle();")
pause 60


################


url "http://localhost:3000/wash__1240?results=true&domain=washington-policy-coalition"

pause 2
wait_for_element('.cancel_opinion_button')
scroll_to('.cancel_opinion_button')
move to_element('.cancel_opinion_button')
click

scroll_to 'header',0,0
pause 4

# hang out on results capture (5 sec)
scroll_to ".histogram", 4000, -40
pause 4


move to_element('.give_opinion_button'), {:speed => 2}  
pause 2
click
pause 5


perform "Learn and build from otherâ€™s thoughts" do 
  pause 1.5
  move to_element('[data-id="/point/1520"]')
  pause 2.5
  drag by(280, 0), {:speed => 1}
  pause 1
  move to_element('[data-id="/point/1888"]')
  pause 3  
  drag by(280, -100), {:speed => 1}
end

perform "Write singular points that each describe a consideration" do
  move to_element(".write_pros"), {:speed => 4}
  click
  type "More choice for parents", {
    :speed => 50
  }
  restore_mouse(2)

  move to_element('[data-action="submit-point"]')
  pause 1
  click
end
pause 1

loc = to_element('.the_handle')

loc[:to][:left] += 20
loc[:to][:top] += 10

move loc, {:speed => 1}
pause 2
drag by(-100, 0)
drag by(220, 15)
pause 2
click
pause 3




########
# cleanup

# while_saying "cleanup comments, points, inclusions" do

#   perform "clean up added comments" do 
#     scroll_to '[data-id="/point/5502"]', 0, 50
#     move to_element('[data-id="/point/5502"]'), {:speed => 0.1}
#     click
#     pause 1
#     while true
#       move to_element('[data-action="delete-comment"]'), {:speed => 0.1} rescue skip
#       click
#       pause 1
#       hit Enter
#     end
#     move to_element('[data-id="/point/5502"]')
#     click
#   end

# end

at_end_of_movie do
  if record_video
    puts "Exporting to #{export_to}"
    stop_recording(export_to)
  end
end
