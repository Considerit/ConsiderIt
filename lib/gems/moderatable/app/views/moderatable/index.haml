-#*********************************************
  For the ConsiderIt project.
  Copyright (C) 2010 - 2012, University of Washington
  Author: Travis Kriplean
  Licensed under the AGPL
  See https://github.com/tkriplean/ConsiderIt/ for details.
  *********************************************

#moderate
  #heading
    %table
      %tr
        %td
          %h2
            Moderation Interface
          .subheader
            Fail posts with personal attacks, or wildly offtopic/inappropriate material.

        %td
          = check_box_tag 'hide_moderated', :checked => false
          = label_tag 'hide_moderated', 'hide moderated'

  #tabs
    - @classes_to_moderate.each_with_index do |mc, idx|  
      %a{:class => 'inactive', :class_name => mc.name}
        %span.name
          = mc.name.split('::').last
        = surround '(', ')' do
          - pp @objs_to_moderate[mc.name].count
          - pp @existing_moderations[mc.name].count
          = @objs_to_moderate[mc.name].length - @existing_moderations[mc.name].length

  
  - @classes_to_moderate.each do |mc|
    %div{:id => "moderate_#{mc.name}", :class_name => mc.name, :class => 'moderation_block'}

      %table.table.table-condensed.table-striped
        %thead
          %tr
            - mc.text_fields.each do |tf|
              %th.header
                = tf
            %th.header
              
        %tbody
          - @objs_to_moderate[mc.name].each do |obj|
            - existing_moderation = @existing_moderations[mc.name].has_key?(obj.id)

            %tr.moderation_row{:class => existing_moderation ? "moderated #{@existing_moderations[mc.name][obj.id].status == 1 ? 'passed' : 'failed'}" : 'not_moderated'}

              - mc.text_fields.each_with_index do |tf, idx|
                %td
                  = obj.read_attribute(tf)
                  - if idx == 0
                    = surround(' [', ']') do
                      - if mc.name == 'Point'
                        = link_to 'view', proposal_point_path(obj.proposal, obj), :target => '_blank'
                      - else
                        = link_to 'view', proposal_point_path(obj.root_object.proposal, obj.root_object), :target => '_blank'
              %td.action



                = form_for :moderate, :url => moderate_create_path, :method => :get, :remote => true do |f|
                  = f.hidden_field :moderatable_id, :value => obj.id
                  = f.hidden_field :moderatable_type, :value => obj.class.name
                  = f.hidden_field :status, :value => existing_moderation ? @existing_moderations[mc.name][obj.id].status : nil


                  %button.pressable_button.pass{:class => existing_moderation && @existing_moderations[mc.name][obj.id].status == 1 ? 'selected' : ''}
                    Pass
                  %button.pressable_button.fail{:class => existing_moderation && @existing_moderations[mc.name][obj.id].status == 0 ? 'selected' : ''}
                    Fail

                  = f.submit 'done', :class => 'hide'

                  - if existing_moderation && @existing_moderations[mc.name][obj.id].user_id != current_user.id
                    .by
                      Moderated by #{@existing_moderations[mc.name][obj.id].user.name}




:javascript
  (function(){
  $(document).ready(function () {init();});
  if($(window)){$(window).bind('page:change', function() {init();});}
  function init(){
    $('#moderate .table').fixedHeaderTable({ footer: false, cloneHeadToFoot: false, fixedColumn: false, height: 700 });

    $(document).on('click', ''#moderate #tabs' a.inactive', function(){
      var cls = $(this).attr('class_name');
      $(this).siblings('.active').toggleClass('active inactive');
      $(this).toggleClass('active inactive');
      $('#moderate .moderation_block').hide();
      $('#moderate .moderation_block[class_name="' + cls + '"]').show();
    });

    $('#moderate #tabs a:first').trigger('click');

    $('#moderate #heading #hide_moderated').click(function(){
      $('#moderate .moderation_block').toggleClass('hide_moderated');
    });

    if($('#moderate #heading #hide_moderated:checked').length > 0) {
      $('#moderate .moderation_block').toggleClass('hide_moderated');
    }
    
    $(document).on('ajax:success', '#moderate .moderation_row form', function(event, data){
        //$(this).parents('.moderation_row').toggleClass('moderated not_moderated');
    }); 

    $(document).on('click', '#moderate .moderation_row button', function(){
      $(this).addClass('selected'); 
      $(this).siblings('button').removeClass('selected');
      $(this).parents('.moderation_row').removeClass('passed failed').addClass($(this).hasClass('pass') ? 'passed' : 'failed');
      $(this).parents('form:first, .moderation_row').removeClass('not_moderated').addClass('moderated');    
      $(this).parents('form:first').find('#moderate_status').val($(this).hasClass('pass') ? 1 : 0);

      $(this).parents('form:first').find('input[type="submit"]').trigger('click');

    });
  }
  })();
