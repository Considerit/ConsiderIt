
%li.progress
  #progressbar
  .text_progress
    #{current_user.positions.published.count}/#{get_proposals.length} measures considered


  -# = image_tag "user_settings_triangle.png", :class => 'triangle_img'
  
  .spacing

  -#
    .hide
      %ul.fr
        %li
          %a
            View your personal voters guide
      .clear


%li.triangle
  %a.settings
    = current_user.name
  = image_tag "user_settings_triangle.png", :class => 'triangle_img'
  

  .spacing

  .hide
    .avatar.fl
      %a.settings
        = image_tag current_user.avatar.url(:small), :alt => "#{h current_user.name}'s profile picture"
    %ul.fr
      %li
        %a.settings
          Preferences
      - if current_user.admin?
        %li
          = link_to 'Admin', admin_dashboard_path, :class => 'admin'
      %li
        = link_to 'Log Out', destroy_user_session_path, :class => 'logout'
    .clear


%li.clear

#settings_dialog

- if !current_user.registration_complete
  = render :partial => "users/registrations/post_registration"


:javascript
  $j(document).ready(function() {
    $j("#post_signup_dialog").dialog({
      bgiframe: true, 
      autoOpen: true, 
      modal: true,
      width: 'auto',
      draggable: false,
      resizable: false
    });

    $j("#settings_dialog").dialog({
      bgiframe: true, 
      autoOpen: false, 
      modal: true,
      width: 'auto',
      draggable: false,
      resizable: false
    });
  
    $j('a.settings')
      .click(function(){
        var dialog = $j('#settings_dialog');
        dialog.load("#{edit_user_registration_path}");
        dialog.dialog('open');
      });

    $j('#nav-user .triangle')
      .hover(
        function(){
          $j(this).find('.hide')
            .stop(true,false)
            .css('height', '')
            .slideDown();
        },
        function(){
          $j(this).find('.hide')
          .stop(true,false)
          .slideUp();        
        });

    $j("#progressbar").each(function(){
      $j(this).progressbar({ value: #{100 * current_user.positions.count / [1,get_proposals.length].max } });
    });

    
  });
