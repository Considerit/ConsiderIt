- providers = [ ['google', user_omniauth_authorize_path(:google)], ['facebook',user_omniauth_authorize_path(:facebook)], ['twitter',user_omniauth_authorize_path(:twitter, :x_auth_access_type => "read")] ]


%script{ :type => "text/template", :id => "tpl_logged_out"}
  .m-login
    %a.m-login-signin
      Sign In
    %a.m-login-signup
      Create Account

%script{ :type => "text/template", :id => "tpl_logged_in"}

  .m-user-options
    .m-user-options-display
      %img{ :src => "{{PaperClip.get_avatar_url(ConsiderIt.current_user, 'small')}}", :alt => "your profile picture"}

      %a
        {{ name }} 

      %span.m-user-options-triangle
        &#x25BE;

    .m-user-options-menu-wrap

      %ul.m-user-options-menu
        %li
          %a{:href => "{{Routes.profile_path(id)}}"}
            Profile
        %li
          %a{:href => "{{Routes.edit_profile_path(id)}}"}
            Preferences

        (( if(is_admin) { ))
        %li
          %a.application{:href => "{{Routes.application_settings_path()}}"}
            App settings
        (( } ))

        (( if( (is_admin || is_moderator ) && #{current_tenant.enable_moderation} ) { ))
        %li
          %a.moderate{:href => "{{Routes.dashboard_moderate_path()}}"}
            Moderate
        (( } ))

        (( if( is_admin || is_analyst ) { ))
        %li
          %a.analyze{:href => "{{Routes.analytics_path()}}"}
            Analyze
        (( } ))

        (( if( (is_admin || is_evaluator ) && #{current_tenant.identifier == 'wash'} ) { ))
        %li
          %a.assess{:href => "{{Routes.assessment_index_path()}}"}
            Assess
        (( } ))

        - if Rails.env.development?
          %li
            = link_to 'Tune', '/newrelic', :target => "_blank"
        %li
          %a.m-user-options-logout
            Sign out


%script{ :type => "text/template", :id => "tpl_pinned_user_signin"}
  %a.m-user-accounts-cancel
    &#10006;

  .m-user-accounts-wrap.m-user-accounts-choose-method

    %h2.m-user-accounts-heading
      Welcome back, {{ConsiderIt.pinned_user_email}}! Please sign in. 

    (( if(auth_method == 'email') { ))
    = form_for :user, :url => user_session_path, :remote => true do |f|

      .m-user-accounts-form
        .m-user-accounts-form-fields-wrap

          .m-user-accounts-form-fields-text

            .email_field.inlined
              //= f.label :email, 'Member email'
              = f.hidden_field :email, :value => "{{ConsiderIt.pinned_user_email}}"

            .password_field.inlined
              //= f.label :email, 'Password'
              = f.password_field :password, :title => 'Password is required.', :placeholder => "Password",  :required => true
              %a.forget_password_prompt
                I forgot. Email me password instructions. 
              
        .m-user-accounts-finish-wrap

          = f.submit "Sign in!"

    (( } else { ))
    %ul.m-user-accounts-login-options
      - providers.each do |(provider, path)|
        %li{ :class => "m-user-accounts-login-option {{ #{provider} != auth_method ? 'hide' : '' }}"} 
          %a{ :onclick => "javascript:openPopupWindow('#{path}')", :class => "zocial #{provider}", :'data-provider' => provider }
            #{provider.capitalize}
    (( } ))


%script{ :type => "text/template", :id => "tpl_user_signin"}
  %a.m-user-accounts-cancel
    &#10006;

  .m-user-accounts-wrap.m-user-accounts-choose-method

    %h2.m-user-accounts-heading
      Welcome back! Select your sign in method below.

    %a.m-user-accounts-switch-method
      New here?

      %span
        Create Account

    %ul.m-user-accounts-login-options
      %li.m-user-accounts-login-option
        %a.email.zocial{:'data-provider' => 'email'}
          Old-fashioned email

      - providers.each do |(provider, path)|
        %li.m-user-accounts-login-option
          %a{ :onclick => "javascript:openPopupWindow('#{path}')", :class => "zocial #{provider}", :'data-provider' => provider }
            #{provider.capitalize}


  .m-user-accounts-wrap.m-user-accounts-complete.m-user-accounts-complete-signin

    = form_for :user, :url => user_session_path, :remote => true do |f|

      .m-user-accounts-form
        .m-user-accounts-form-fields-wrap

          .m-user-accounts-form-fields-text

            .email_field.inlined
              //= f.label :email, 'Member email'
              = f.email_field :email, :title => 'We need an email address, thanks.', :placeholder => "Your email address", :required => true, :class =>"h5-email"

            .password_field.inlined
              //= f.label :email, 'Password'
              = f.password_field :password, :title => 'Password is required.', :placeholder => "Password",  :required => true
              %a.forget_password_prompt
                I forgot. Email me password instructions. 
              
            - providers.each do |(provider, path)|
              .m-user-accounts-authorized-feedback{:'data-provider' => "#{provider}" }

                %a{ :class => "zocial #{provider} icon" }

                Registering via #{provider}



        .m-user-accounts-finish-wrap

          = f.submit "Sign in!"
      



- requires_pledge = current_tenant.requires_civility_pledge_on_registration
%script{ :type => "text/template", :id => "tpl_new_user" }      
  %a.m-user-accounts-cancel
    &#10006;

  .m-user-accounts-wrap.m-user-accounts-choose-method

    %h2.m-user-accounts-heading
      Welcome! How do you want to register?

    %a.m-user-accounts-switch-method
      Returning?

      %span
        Sign In

    %ul.m-user-accounts-login-options
      %li.m-user-accounts-login-option
        %a.email.zocial{:'data-provider' => 'email'}
          Old-fashioned email
        .m-user-accounts-fineprint.m-fineprint-email
          Email confirmation step required

      - providers.each do |(provider, path)|
        %li.m-user-accounts-login-option
          %a{ :onclick => "javascript:openPopupWindow('#{path}')", :class => "zocial #{provider}", :'data-provider' => provider }
            #{provider.capitalize}
          - if provider == 'facebook'
            .m-user-accounts-fineprint.m-fineprint-social
              We don't post to your wall without permission


  .m-user-accounts-wrap.m-user-accounts-complete.m-user-accounts-complete-register

    //%h2.m-user-accounts-heading
    //  Complete your registration

    = form_for :user, :url => user_registration_path, :remote => true, :multipart => true do |f|
      .m-user-accounts-form
        .m-user-accounts-form-fields-wrap

          = image_tag current_theme_image_path("logo.png"), :class => "m-user-accounts-logo"

          .m-user-accounts-form-fields-text

            .name_field.inlined
              //= f.label :name, 'Member name'
              = f.text_field :name, :title => 'Give yourself a name, please!', :placeholder => "Your name",  :required => true, :class =>"", :pattern => "^.{1,}"

            .email_field.inlined
              //= f.label :email, 'Member email'
              = f.email_field :email, :title => 'We need an email address, thanks.', :placeholder => "Your email address", :required => true, :class =>"h5-email"

            .password_field.inlined
              //= f.label :email, 'Password'
              = f.password_field :password, :title => 'Password is required.', :placeholder => "Password",  :required => true


            .m-user-accounts-authorized-feedback{:'data-provider' => 'email'}
              %a.email.zocial.icon
                
              Registering via email
              
            - providers.each do |(provider, path)|
              .m-user-accounts-authorized-feedback{:'data-provider' => "#{provider}" }

                %a{ :class => "zocial #{provider} icon" }

                Registering via #{provider}

            .m-user-accounts-pledge-taken
              &#10004; Civility pledge taken


          .avatar_field
            = f.file_field :avatar, :title => 'Upload a profile picture (optional)'
            .selected.hide
  
            .import_from_third_party
              %span
                Import pic from: 

              .import_from_third_parties

                %a{ :onclick => "javascript:openPopupWindow('#{user_omniauth_authorize_path(:facebook)}')", :class => "zocial facebook icon import_from_third_party", :'data-provider' => 'facebook' }

                %a{ :onclick => "javascript:openPopupWindow('#{user_omniauth_authorize_path(:twitter)}')", :class => "zocial twitter icon import_from_third_party", :'data-provider' => 'twitter' }

              = f.hidden_field :avatar_url, :class => 'avatar_url'


          .clear

        .m-user-accounts-finish-wrap
          - if requires_pledge
            .m-user-accounts-pledge
              //.m-user-accounts-pledge-heading
              //  To participate, we ask for your pledge
              = render :partial => "users/registrations/pledge"

          = f.hidden_field :registration_complete, :value => true

          = f.submit "Create my account!"

          .m-user-accounts-tos
            %span
              Signing up acknowledges that you agree to the 
            %a.m-user-terms-show
              Terms of Use

            .m-user-the-terms-of-use
              = render :partial => "home/terms-of-use"



%script{ :type => "text/template", :id => "tpl_new_pinned_user" }      
  %a.m-user-accounts-cancel
    &#10006;

  .m-user-accounts-wrap.m-user-accounts-complete.m-user-accounts-complete-register

    %h2.m-user-accounts-heading
      Welcome, {{ConsiderIt.pinned_user_email}}! Please create an account. 

    = form_for :user, :url => user_registration_path, :remote => true, :multipart => true do |f|
      .m-user-accounts-form
        .m-user-accounts-form-fields-wrap

          = image_tag current_theme_image_path("logo.png"), :class => "m-user-accounts-logo"

          .m-user-accounts-form-fields-text

            .name_field.inlined
              //= f.label :name, 'Member name'
              = f.text_field :name, :title => 'Give yourself a name, please!', :placeholder => "Your name",  :required => true, :class =>"", :pattern => "^.{1,}"

            .email_field.inlined
              //= f.label :email, 'Member email'
              {{ConsiderIt.pinned_user_email}}
              = f.hidden_field :email, :value => "{{ConsiderIt.pinned_user_email}}"

            .password_field.inlined
              //= f.label :email, 'Password'
              = f.password_field :password, :title => 'Password is required.', :placeholder => "Password",  :required => true

          .avatar_field
            = f.file_field :avatar, :title => 'Upload a profile picture (optional)'
            .selected.hide
  
            .import_from_third_party
              Import pic from: 

              .import_from_third_parties

                %a{ :onclick => "javascript:openPopupWindow('#{user_omniauth_authorize_path(:facebook)}')", :class => "zocial facebook icon import_from_third_party", :'data-provider' => 'facebook' }

                %a{ :onclick => "javascript:openPopupWindow('#{user_omniauth_authorize_path(:twitter)}')", :class => "zocial twitter icon import_from_third_party", :'data-provider' => 'twitter' }

              = f.hidden_field :avatar_url, :class => 'avatar_url'


          .clear

        .m-user-accounts-finish-wrap
          - if requires_pledge
            .m-user-accounts-pledge
              //.m-user-accounts-pledge-heading
              //  To participate, we ask for your pledge
              = render :partial => "users/registrations/pledge"

          = f.hidden_field :registration_complete, :value => true

          = f.submit "Create my account!"

          .m-user-accounts-tos
            Signing up acknowledges that you agree to the 
            %a
              Terms of Use.

%script{ :type => "text/template", :id => "tpl_user_reset_password" }
  %a.m-user-accounts-cancel
    &#10006;

  .m-user-accounts-wrap

    %h2
      Change your password

    = form_for(:user, :url => password_path(:user), :remote => true, :html => { :method => :put }) do |f|

      = f.hidden_field :reset_password_token, :value => "{{password_reset_token}}"

      %p
        = f.label :password, "New password"

      = f.password_field :password

      %p
        = f.label :password_confirmation, "Confirm new password" 
      = f.password_field :password_confirmation

      .m-user-accounts-finish-wrap
        = f.submit "Change my password and sign in", :class => 'button'

