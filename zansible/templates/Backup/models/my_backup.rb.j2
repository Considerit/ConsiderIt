# encoding: utf-8

##
# Backup Generated: my_backup
# Once configured, you can run the backup with the following command:
#
# $ backup perform -t my_backup [-c <path_to_configuration_file>]
#
Backup::Model.new(:'{{ ansible_hostname }}-dump', 'Backups up considerit database to S3') do
  ##
  # Split [Splitter]
  #
  # Split the backup file in to chunks of 250 megabytes
  # if the backup file size exceeds 250 megabytes
  #
  split_into_chunks_of 250

  ##
  # MySQL [Database]
  #
  database MySQL do |db|
    # To dump all databases, set `db.name = :all` (or leave blank)
    db.name               = "{{ database.name }}"
    db.username           = "{{ database.user }}"
    db.password           = "{{ database.password }}"
    db.host               = "localhost"
    # db.port               = 3306
    # db.socket             = "/tmp/mysql.sock"
    # Note: when using `skip_tables` with the `db.name = :all` option,
    # table names should be prefixed with a database name.
    # e.g. ["db_name.table_to_skip", ...]
    # db.skip_tables        = ["skip", "these", "tables"]
    # db.only_tables        = ["only", "these", "tables"]
    # db.additional_options = ["--quick", "--single-transaction"]
  end


  ##
  # Amazon Simple Storage Service [Storage]
  #
  # Available Regions:
  #
  #  - ap-northeast-1
  #  - ap-southeast-1
  #  - eu-west-1
  #  - us-east-1
  #  - us-west-1
  #
  store_with S3 do |s3|
    # s3.access_key_id     = "my_access_key_id"
    # s3.secret_access_key = "my_secret_access_key"
    # s3.region            = "us-east-1"
    s3.bucket            = "considerit-backups"
    s3.path              = "{{ ansible_hostname }}-considerit"
    s3.keep              = 10
  end

  store_with Dropbox do |db|
    db.api_key     = "{{ config.dropbox.key }}"
    db.api_secret  = "{{ config.dropbox.secret }}"
    # Sets the path where the cached authorized session will be stored.
    # Relative paths will be relative to ~/Backup, unless the --root-path
    # is set on the command line or within your configuration file.
    # db.cache_path  = ".cache"
    # :app_folder (default) or :dropbox
    db.access_type = :app_folder
    db.path        = "{{ ansible_hostname }}-considerit"
    db.keep        = 10
  end

  ##
  # Gzip [Compressor]
  #
  compress_with Gzip

  ##
  # Mail [Notifier]
  #
  # The default delivery method for Mail Notifiers is 'SMTP'.
  # See the Wiki for other delivery options.
  # https://github.com/meskyanichi/backup/wiki/Notifiers
  #

  notify_by Mail do |mail|
    mail.on_success           = false
    mail.on_warning           = true
    mail.on_failure           = true

    mail.delivery_method      = :smtp
    mail.from                 = "tkriplean@gmail.com"
    mail.to                   = "tkriplean@gmail.com"
  end

end