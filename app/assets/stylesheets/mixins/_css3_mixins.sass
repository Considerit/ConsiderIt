// ---- CSS3 SASS MIXINS ----
// https://github.com/madr/css3-sass-mixins
//  
//  Copyright (C) 2011 by Anders YtterstrÃ¶m
//  
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.
//


//  Should IE filters be used or not?
//  PROS: gradients, drop shadows etc will be handled by css.
//  CONS: will harm the site performance badly, 
//        especially on sites with heavy rendering and scripting.
$useIEFilters: 0

// might be 0 or 1. disabled by default.

source slice width outset repeat

=border-image($path, $top, $right, $bottom, $left, $repeats:stretch)
  -moz-border-image: $path $top $right $bottom $left $repeats
  -o-border-image: $path $top $right $bottom $left $repeats
  -webkit-border-image: $path $top $right $bottom $left $repeats
  border-image: $path $top $right $bottom $left $repeats

=border-radius($values)
  -moz-border-radius: $values
  -webkit-border-radius: $values
  border-radius: $values

=box-shadow($x, $y, $offset, $hex, $opacity: 1, $ie: $useIEFilters)
  -moz-box-shadow: $x $y $offset $hex
  -webkit-box-shadow: $x $y $offset $hex
  @if $opacity != 1
    box-shadow: $x $y $offset rgba($hex, $opacity)
  @else
    box-shadow: $x $y $offset $hex
  @if $ie == 1
    $iecolor: "#" + red($hex) + green($hex) + blue($hex)
    filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=#{$x}, OffY=#{$y}, Color='#{$iecolor}')
    -ms-filter: quote(progid:DXImageTransform.Microsoft.dropshadow(OffX=#{$x}, OffY=#{$y}, Color='#{$iecolor}'))

=box-shadow-straight($value)
  $value: unquote($value)
  -moz-box-shadow: $value
  -webkit-box-shadow: $value
  box-shadow: $value

=inset-box-shadow($x, $y, $offset, $hex, $opacity: 1, $ie: $useIEFilters)
  -moz-box-shadow: $x $y $offset $hex inset
  -webkit-box-shadow: $x $y $offset $hex inset
  @if $opacity != 1
    box-shadow: $x $y $offset rgba($hex, $opacity) inset
  @else
    box-shadow: $x $y $offset $hex inset
  @if $ie == 1
    $iecolor: "#" + red($hex) + green($hex) + blue($hex)
    filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=#{$x}, OffY=#{$y}, Color='#{$iecolor}')
    -ms-filter: quote(progid:DXImageTransform.Microsoft.dropshadow(OffX=#{$x}, OffY=#{$y}, Color='#{$iecolor}'))


=box-shadow-remove($ie: $useIEFilters)
  -moz-box-shadow: none
  -webkit-box-shadow: none
  box-shadow: none
  @if $ie == 1
    filter: none
    -ms-filter: none


=linear-gradient($from, $to, $ie: $useIEFilters)
  @if $ie != 1
    background-color: $to
  background-image: -moz-linear-gradient($from, $to)
  background-image: -webkit-gradient(linear,left top,left bottom,color-stop(0, $from),color-stop(1, $to))
  background-image: -webkit-linear-gradient($from, $to)
  background-image: -o-linear-gradient($from, $to)
  background-image: -ms-linear-gradient($from, $to)
  @if $ie == 1
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}')
    -ms-filter: quote(progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}'))

=complex-gradient($from, $to, $from_stop : 0%, $to_stop: 100%, $position: center top, $ie: $useIEFilters)
  background-image: linear-gradient($position, $from $from_stop, $to $to_stop)
  background-image: -o-linear-gradient($position, $from $from_stop, $to $to_stop)
  background-image: -moz-linear-gradient($position, $from $from_stop, $to $to_stop)
  background-image: -webkit-linear-gradient($position, $from $from_stop, $to $to_stop)
  background-image: -ms-linear-gradient($position, $from $from_stop, $to $to_stop)
  background-image: -webkit-gradient(linear, center top, center bottom, color-stop($from_stop, $from), color-stop($to_stop, $to))

  @if $ie > 0
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}')
    -ms-filter: quote(progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}'))


=hyphenate
  -ms-word-break: break-all
  word-break: break-all
  word-break: break-word
  -moz-hyphens: auto
  -webkit-hyphens: auto
  hyphens: auto
  hyphenate: auto


=rgba($hex, $alpha, $ie: $useIEFilters)
  @if $ie == 1
    $iehex: $hex
    @if $iehex == black
      $iehex: '000000'
    @if $iehex == white
      $iehex: 'ffffff'

    $hexopac: "#" + ceil($alpha * 255 / 16 * 10) + $iehex
    background-color: none
    filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$hexopac}',EndColorStr='#{$hexopac}}')
    -ms-filter: quote(progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$hexopac}',EndColorStr='#{$hexopac}'))
  @else
    background-color: $hex
  background-color: rgba(red($hex), green($hex), blue($hex), $alpha)

=transform($rotate_deg, $skew_deg:-1)
  @if $skew_deg == -1
    -moz-transform: rotate(#{$rotate_deg}deg)
    -o-transform: rotate(#{$rotate_deg}deg)
    -webkit-transform: rotate(#{$rotate_deg}deg)
  @else
    -moz-transform: rotate(#{$rotate_deg}deg) skew(#{$skew_deg}deg)
    -o-transform: rotate(#{$rotate_deg}deg) skew(#{$skew_deg}deg)
    -webkit-transform: rotate(#{$rotate_deg}deg) skew(#{$skew_deg}deg)

=scale($size)
  -moz-transform: scale(#{$size})
  -o-transform: scale(#{$size})
  -ms-transform: scale(#{$size})
  -webkit-transform: scale(#{$size})  
  transform: scale(#{$size})  

=scaleX($size)
  -moz-transform: scaleX(#{$size})
  -o-transform: scaleX(#{$size})
  -ms-transform: scaleX(#{$size})
  -webkit-transform: scaleX(#{$size})
  transform: scaleX(#{$size})

=scaleY($size)
  -moz-transform: scaleY(#{$size})
  -o-transform: scaleY(#{$size})
  -ms-transform: scaleY(#{$size})
  -webkit-transform: scaleY(#{$size})
  transform: scaleY(#{$size})


=filter($command)
  filter: $command
  -ms-filter: "#{$command}"


=transition($value: all 0.4s linear)
  -moz-transition: $value
  -o-transition: $value
  -ms-transition: $value
  -webkit-transition: $value
  transition: $value

=opacity($value)
  -moz-opacity: \.#{$value}
  opacity: \.#{$value}
  filter: alpha(opacity=$value)

=boxy_border
  box-sizing: border-box
  -webkit-box-sizing: border-box
  -moz-box-sizing: border-box
  -ms-box-sizing: border-box

// ==== /CSS3 SASS MIXINS ====
