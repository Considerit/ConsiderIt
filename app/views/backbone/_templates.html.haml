
- cache ['templates', current_tenant] do


  %script{ :type => "text/template", :id => "tpl_point_follows"}
    (( if( published && ConsiderIt.current_user.is_logged_in() ) { ))

    (( var follows_class = already_follows ? 'hide' : ''; ))
    (( var unfollows_class = already_follows ? '' : 'hide'; ))
    %div{ :class => "follow {{ follows_class }}"}
      = form_for :follows, :url => "{{ Routes.follow_path() }}", :as => :follow, :method => :get, :remote => true do |f|
        = f.hidden_field :followable_id, :value => "{{id}}"
        = f.hidden_field :followable_type, :value => "Point"
        = f.submit "Follow this point", :title => 'Get notifications when the point is updated or someone comments on it. You can easily unsubscribe later.' #, :class => 'button'

    %div{ :class => "unfollow {{ unfollows_class }}"}
      = form_for :follows, :url => "{{ Routes.unfollow_path() }}", :as => :follow, :remote => true do |f|
        = f.hidden_field :user_id, :value => "{{ ConsiderIt.current_user.id }}"
        = f.hidden_field :followable_id, :value => "{{ id }}"
        = f.hidden_field :followable_type, :value => "Point"
        = f.submit "Unfollow this point" #, :class => 'button'

    (( } ))


  %script{ :type => "text/template", :id => "tpl_point" }   

    (( if (hide_name || user.name == 'Anonymous' ) { ))
    %span.avatar.m-point-author-avatar.m-avatar-anonymous{:style => "background-image: url(/system/default_avatar/small_default-profile-pic.png)", :title => "This user has requested to remain anonymous"}
    .m-point-author-name
      by Anonymous
    (( } else if (user) { ))

    %a.avatar.m-point-author-avatar{ :id => "avatar-{{user.id}}", :title => "View {{user.name}}'s profile", :alt => "{{user.name}}'s profile", :'data-id' => "{{user.id}}", :'data-target' => "user_profile_page" }
    .m-point-author-name{:'data-id' => "{{user.id}}", :'data-target' => "user_profile_page" }
      by {{user.name}}
    (( } ))

    .m-point-wrap

      .m-point-nutshell-wrap
        .m-point-nutshell
          {{ adjusted_nutshell }}

      .m-point-details-description 
        {{ text }}

      .m-point-operations

        .m-point-follow

        .m-point-assess

        %a.m-point-read-more 
          //{ :href => "{{Routes.proposal_point_path(proposal.long_id, id)}}" }        
          {{ comment_count == 1 ? "1 comment" : comment_count + " comments"}}
        %a.m-point-remove{ :'data-target' => 'point-remove'}
          Remove from your list

      .m-point-include-wrap
        %a.m-point-include{ :'data-target' => 'point-include'}
          Add to your list
          %span.list_connector



  %script{ :type => "text/template", :id => "tpl_newpoint" }      
    
    .m-newpoint

      %a.m-newpoint-new
        Write a new {{is_pro ? "pro" : "con"}} point

      .m-newpoint-form
        = hidden_field_tag :is_pro, "{{is_pro}}", :class => 'm-newpoint-is_pro'

        .m-newpoint-nutshell-wrap
          = text_area_tag :nutshell, nil, :placeholder => 'Summarize your point (required)', :cols => 28, :class => "m-newpoint-nutshell is_counted", :required=>true, :maxlength => 140, :pattern => "^.{3,}"
          %span.count
            140

        .m-newpoint-description-wrap
          = text_area_tag :text, nil, :placeholder => "Write a longer description (optional)", :title => "Write a longer description (optional)", :cols => 28, :class => "m-newpoint-description"

        .m-newpoint-anonymous-wrap
          = label_tag :hide_name, 'conceal your name', :title => 'We encourage you not to hide your name from other users. Signing your point with your name lends it more weight to other participants.'

          = check_box_tag :hide_name, :class => 'm-newpoint-anonymous'

        .m-newpoint-submit

          %a.m-newpoint-cancel
            cancel

          %input.m-newpoint-create.button{ :type => 'submit', :value => 'Done'}
          
        
  %script{ :type => "text/template", :id => "tpl_pointlistpagination" }
    %a.m-pointlist-backward
      (( if(start_record != 1){ ))
      &#9650;
      (( } ))

    .m-pointlist-status

      %span.m-pointlist-start
        {{start_record}}
      %span &ndash;
      %span.m-pointlist-end
        {{end_record}}
      %span
        = surround ' ' do
          of
      %span.m-pointlist-total
        {{total_records}}

    %a.m-pointlist-forward
      (( if(end_record != total_records){ ))
      &#9660;
      (( } ))




  %script{ :type => "text/template", :id => "tpl_newcomment" }   
    .m-new-comment            

      %span.avatar.m-new-comment-avatar{ :id => "avatar-{{user.id}}", :alt => "{{user.get('name')}}'s profile picture"}

      .m-new-comment-body
        %textarea.m-new-comment-body-field.is_counted{ :name => :body, :placeholder => 'Type your comment here...', :title => 'Type your comment here...' }
        %span.count
          1000

        (( if( user ) { ))
        .m-new-comment-submit-wrap
          %span.m-new-comment-civility-reminder
            Thanks for being civil!

          %a.m-new-comment-submit.button
            Add comment

        (( } else { ))
        .signinrequired
          You must 
          %a.signin_link
            sign in
          to leave a comment.
        (( } ))


  %script{ :type => "text/template", :id => "tpl_comment" }   
    
    (( if( moderation_status == 0 ){ ))
    %i
      This comment has been hidden because it contains a personal attack, is inappropriate (e.g. advertising), or is wildly offtopic.
    ((} else { ))

    %a.avatar.m-comment-avatar{ :id => "avatar-{{user.id}}", :alt => "{{user.get('name')}}'s profile picture", :'data-id' => "{{user.id}}", :'data-target' => "user_profile_page"}

    .m-comment-body-wrap
      .m-comment-body
        {{body}}

      %span.m-comment-author
        &ndash; 
        %a{ :href => "{{Routes.profile_path(user.id)}}", :'data-id' => "{{user.id}}", :'data-target' => "user_profile_page"}
          {{ user.get('name') }}

    - if false && can_update
      .m-comment-edit-wrap
        %a.m-comment-edit
          edit
        .m-comment-edit-form.hide
          -#= render :partial => 'commentable/make_editable', :locals => { :comment => comment, :validations => {:maxlength => 1000} }
          %a
            cancel
    (( } ))

  %script{ :type => "text/template", :id => "tpl_new_proposal"}
    %button.m-new-proposal-submit
      Start a new conversation


  %script{ :type => "text/template", :id => "tpl_unexpanded_proposal" }
    .l-content-wrap
      .m-proposal-heading-wrap
        %h2.m-proposal-heading
          {{title}}

      .m-proposal-body_wrap


      (( if(published){ ))
      .m-proposal-connect.m-proposal-strip

        %ul
          (( if( ConsiderIt.current_user.is_logged_in() ) { ))
          (( var selected_class = ConsiderIt.current_user.is_following('Proposal', id) ? 'selected' : ''; ))
          %li.m-proposal-action-label
            Follow this conversation:
          %li
            %button{ :class => "{{ selected_class }} m-proposal-follow_conversation" }
              Get email updates

          (( } ))

          %li.m-proposal-action-label
            Help spread the word
          %li.m-proposal-action-link
            .zocial.icon.facebook
          %li.m-proposal-action-link
            .zocial.icon.twitter
          %li.m-proposal-action-link
            .zocial.icon.permalink
          %li.m-proposal-action-label
            Link to this conversation
      (( } ))

      (( if(published){ ))
      .m-proposal_strip_toggle.m-proposal-strip
        %a.m-proposal-toggle
          %span.m-proposal_toggle_expanded
            Hide conversation
          %span.m-proposal_toggle_unexpanded
            Join conversation

      (( } else { ))
      .m-proposal-strip_publish
        = form_for :proposal, :url => "{{Routes.proposal_path(long_id)}}", :method => :put, :remote => true, :html => {:class => 'm-proposal-publish-form'} do |f|
          = f.hidden_field :published, :value => true

          = f.submit 'Publish this new conversation', :class => 'm-proposal-publish'

        = link_to "cancel", "{{Routes.proposal_path(long_id)}}", :confirm => "Canceling will permanently delete this conversation. Are you sure?", :method => :delete, :remote => true, :class => 'm-delete_proposal'

      (( } ))

  %script{ :type => "text/template", :id => "tpl_expanded_proposal" }

    .m-proposal-message.m-proposal-introduction
      .l-message-speaker.m-proposal-initiator
        %a{ :'data-id' => "{{user_id}}", :'data-target' => "user_profile_page" }
          %img{:src => "{{ avatar }}"}

      .l-message-body.left.m-proposal-description
        = render :partial => "shared/bubble", :locals => {:left => true}
        .m-proposal-description-body
          {{description}}

        .m-proposal-description-details

          (( _.each(description_detail_fields, function(field) {  ))

          (( if( field[2] != '') { ))
          .m-proposal-description-detail-field
            .m-proposal-description-detail-field-heading
              {{ field[1] }}
              %a.hidden
                show
            .m-proposal-description-detail-field-full.hide
              %div{ :class => "m-proposal-description-detail-field-{{field[0]}}" }
                {{ field[2] }}
              %a.hidden
                show
          (( } ))

          (( }); ))

      .l-message-recipient

    (( if(published){ ))
    .m-proposal-message.m-proposal-leader-response
      .l-message-speaker.m-proposal-initiator.small
        %a{ :'data-id' => "{{user_id}}", :'data-target' => "user_profile_page" }
          %img{:src => "{{ avatar }}"}


      .l-message-body.left.m-proposal-description
        = render :partial => "shared/bubble", :locals => {:left => true}

        (( var r = Math.floor(Math.random()*3); ))

        .rep_statement
          (( if(r==0){ ))
          I've not yet taken a stance
          (( } else if(r==1){ ))
          I hope to hear from more of you. Meanwhile, these are 
          %a{ :style => "text-decoration: underline; cursor: pointer;"}
            my thoughts so far. 
          (( } else{ ))
          Based on your input and my considerations, I've decided that I support. Read my 
          = surround '', '.' do
            %a{ :style => "text-decoration: underline; cursor: pointer;"}
              full report
          Thanks!
          (( } ))  

      .l-message-recipient      
    (( } ))


  %script{ :type => "text/template", :id => "tpl_your_action_craft"}
    .l-message-recipient

    %a.l-message-body.m-position-your-action-body.right.join{ :href => "{{Routes.new_position_proposal_path( long_id )}}"}
      = render :partial => "shared/bubble", :locals => {:left => false}

      %span.text
        {{call}}

    .l-message-speaker
      = image_tag current_theme_image_path("you.png")

  %script{ :type => "text/template", :id => "tpl_your_action_save"}
    .l-message-recipient

    %a.l-message-body.m-position-your-action-body.right.submit
      = render :partial => "shared/bubble", :locals => {:left => false}

      //= image_tag current_theme_image_path("join.png")

      %span.text
        {{call}}

    .l-message-speaker
      = image_tag current_theme_image_path("you.png")


  %script{ :type => "text/template", :id => "tpl_position" }      
    .l-message-recipient
    .l-message-body.right.m-position-message-body
      = render :partial => "shared/bubble", :locals => {:left => false}

      %h2.m-position-heading
        I consider these the most important pros and cons

      .m-reasons
        .m-reasons-peer-points.m-reasons-peer-points-pros

          / .m-reasons-peer-pros-heading
          /   %h3
          /     Pros by other users
          /   .sublead
          /     add good ones to your list

          .m-reasons-peer-pros
            %ul.m-point-list

        .m-reasons-pro-con-list
          .m-pro-con-list-propoints
           
            / .m-pro-con-list-header
            /   Pros
            //  - if theme_image_path('pro_header.png') && File.exists?(theme_image_path('pro_header.png'))
            //    = theme_image_tag('pro_header.png')
            //  - else
            //    = image_tag('chalk/pros.png') 

            %ul.m-point-list

          .m-pro-con-list-conpoints

            / .m-pro-con-list-header
            /   Cons
            //   - if theme_image_path('con_header.png') && File.exists?(theme_image_path('con_header.png'))
            //     = theme_image_tag('con_header.png')
            //   - else
            //     = image_tag('chalk/cons.png') 

            %ul.m-point-list

        .m-reasons-peer-points.m-reasons-peer-points-cons
          / .m-reasons-peer-cons-heading
          /   %h3
          /     cons by other users
          /   .sublead
          /     add good ones to your list

          .m-reasons-peer-cons
            %ul.m-point-list


      .m-stance
        %h2.m-position-heading
          Based on these pros and cons, I lean... 
        %table
          %tr
            %td.m-stance-label-support
              %div
                Support

            %td.m-stance-slider-container
              
            %td.m-stance-label-oppose
              %div
                Oppose
          %tr
            %td.m-stance-label-neutral{ :colspan => 3 }
              Neutral / Undecided



      .stance.position_statement.hide
        %label{ :name => :explanation }
          Optional statement that summarizes your thoughts
        %textarea.m-position-statement{ :name => :explanation}

    .l-message-speaker
      = image_tag current_theme_image_path("you.png")

  %script{ :type => "text/template", :id => "tpl_summary" }      
    .l-message-recipient
    .l-message-body.right.m-results-responders.summary{ :style => " {{ tile_size==50 ? '' : 'min-height:160px;' }} "}
      = render :partial => "shared/bubble", :locals => {:left => false}


      %h3.m-summary-heading
        The most compelling pros and cons we've considered so far: 
        
      .m-summary-top-pro
        (( if(!top_pro) { ))
        .text
          No pro arguments added yet.
        (( } else { ))

        %a.avatar{ :'data-id' => "{{top_pro.user_id}}", :'data-target' => 'user_profile_path', :id => "avatar-{{top_pro.user_id}}", :alt => "{{ConsiderIt.users[top_pro.user_id].get('name')}}'s profile picture", :class => "author"}

        .m-top-pro-body.left
          = render :partial => "shared/bubble", :locals => {:left => true}
          .text
            {{top_pro.nutshell}}
        (( } ))

      .m-summary-top-con
        (( if(!top_con) { ))
        .text
          No con arguments added yet.
        (( } else { ))
        .m-top-con-body.l-message-body.right
          = render :partial => "shared/bubble", :locals => {:left => false}
          .text
            {{top_con.nutshell}}

        %a.avatar{ :'data-id' => "{{top_con.user_id}}", :'data-target' => 'user_profile_path', :id => "avatar-{{top_con.user_id}}", :alt => "{{ConsiderIt.users[top_con.user_id].get('name')}}'s profile picture", :class => "author"}

        (( } ))
      .clear  

    .l-message-speaker.l-group-container
      (( _.each(participants, function(p){ ))
      %span.avatar{ :'data-id' => "{{p}}", :alt => "{{ConsiderIt.users[p].get('name')}}'s profile picture", :id => "avatar-{{p}}", :class => "participant", :style => "height:{{tile_size}}px; width:{{tile_size}}px;"}
      (( }); ))

      %a.results{:href => "{{Routes.proposal_path( long_id )}}"}
        View results

  %script{ :type => "text/template", :id => "tpl_results" }      
    .l-message-recipient

    .l-message-body.right.m-results-responders
      = render :partial => "shared/bubble", :locals => {:left => false}

      %h3.m-results-pro-con-list-who
        .m-results-pro-con-list-who-others
        .m-results-pro-con-list-who-all    
          Amongst all of us, these are the most important



      .m-results-pro-con-list{ :class => "static" }


        .m-pro-con-list-propoints             
          .m-pro-con-list-header
            Pros
            / - if theme_image_path('pro_header.png') && File.exists?(theme_image_path('pro_header.png'))
            /   = theme_image_tag('pro_header.png')
            / - else
            /   = image_tag('chalk/pros.png') 
          %ul.m-point-list
     

        .m-pro-con-list-conpoints

          .m-pro-con-list-header
            Cons
            / - if theme_image_path('con_header.png') && File.exists?(theme_image_path('con_header.png'))
            /   = theme_image_tag('con_header.png')
            / - else
            /   = image_tag('chalk/cons.png') 

          %ul.m-point-list

        .m-results-point-filters
          %span.label
            order by 

          %a.point_filter.selected{ :'data-filter' => 'score'}
            Popularity
          %a.point_filter{ :'data-filter' => 'appeal'}
            Most Unifying
          %a.point_filter{ :'data-filter' => 'divisiveness'}
            Most Divisive

    .l-message-speaker

      .l-group-container{ :style => 'position: absolute; top: 0; left: 0;'}
        (( _.each( participants, function(p){ ))
        %span.avatar{ :'data-id' => "{{p}}", :id => "avatar-{{p}}", :alt => "{{ConsiderIt.users[p].get('name')}}'s profile picture", :class => "participant", :style => "height:{{tile_size}}px; width:{{tile_size}}px;"}
        (( }); ))

      .clear


      .m-histogram

        .m-histogram-label-support
          Supporters

        (( _.each(histogram.breakdown, function(bar, bucket){ ))


        .m-histogram-bar{ :style => "width: {{bar.full_size}}px;", :bucket => "{{bucket}}", :id => "bucket-{{bucket}}"}

          = render :partial => "shared/bubble_equilateral", :locals => {:left => false}

          .m-bar-percentage
            {{ Math.ceil(bar.positions.length / participants.length * 1000)/10 }}%

          .m-bar-close
            x

          (( if (bar.positions.length > 0) { ))
          %ul.m-bar-people
            (( _.each( _.range(bar.num_ghosts), function(ghost){  ))
            %li.m-bar-ghost{ :style => "height:{{bar.tile_size}}px; width:{{bar.tile_size}}px;"}
            (( }); ))

            (( _.each(bar.positions, function(position) { ))
            (( var user = ConsiderIt.users[position.get('user_id')]; ))
            (( if (user){ ))

            (( var has_explanation = position.get('explanation') && position.get('explanation').length > 0, expl_clss = has_explanation ? 'm-person-has-explanation' : 'm-person-has-no-explanation'; ))

            %li.m-bar-person{:class=>"bucket-{{bucket}} {{expl_clss}}", :id=>"user-{{user.id}}", :user => "{{user.id}}"}
              %span.avatar{ :'data-id' => "{{user.id}}", :id => "avatar-{{user.id}}", :alt => "{{user.get('name')}}'s profile picture", :style => "height:{{bar.tile_size}}px; width:{{bar.tile_size}}px;"}   
                     
              .m-bar-person-details
                
                %strong
                  {{user.get('name')}}

                (( if ( has_explanation ) { ))
                %blockquote.m-bar-person-explanation
                  {{  position.get('explanation') }}
                (( } ))
            (( } ))
            (( }); ))
          (( } ))

        (( }); ))
        .m-histogram-label-oppose
          Opposers

        .clear  

  %script{ :type => "text/template", :id => "tpl_proposal_admin_strip_edit_publicity" }
    .l-dialog-detachable
      %h2
        Who can view and participate?  

      = form_for :proposal, :url => "{{Routes.proposal_path(long_id)}}", :method => :put, :remote => true, :html => {:class => 'm-proposal-admin_operations-settings-form'} do |f|
        .radio_block
          .option
            (( if(publicity == 2) { ))
            = f.radio_button :publicity, '2', :value => '2', :checked => true
            (( } else { ))
            = f.radio_button :publicity, '2', :value => '2'
            (( } ))

            = f.label :publicity, 'Public', :value => '2'
            .sublabel
              It will be accessible on the homepage.

          .option
            (( if(publicity == 1) { ))
            = f.radio_button :publicity, '1', :value => '1', :checked => true
            (( } else { ))
            = f.radio_button :publicity, '1', :value => '1'
            (( } ))

            = f.label :publicity, 'Anyone with a link', :value => '1'
            .sublabel
              Only people that have a link to this proposal will be able to access it.

          .option
            (( if(publicity == 0) { ))
            = f.radio_button :publicity, '0', :value => '0', :checked => true
            (( } else { ))
            = f.radio_button :publicity, '0', :value => '0'
            (( } ))

            = f.label :publicity, 'Private', :value => '0'
            .sublabel
              Restrict access to the following invited participants.

            .access_list
              .label
                Comma-separated email list of invited users:
              = f.text_area :access_list, :rows => 2, :class => "autoResize"

        .save_block
          = f.submit 'save'
          %a.cancel
            cancel

  %script{ :type => "text/template", :id => "tpl_proposal_admin_strip_edit_active"}
    .l-dialog-detachable
      %h2
        Set the status of this proposal.  

      = form_for :proposal, :url => "{{ Routes.proposal_path(long_id) }}", :method => :put, :remote => true, :html => {:class => 'm-proposal-admin_operations-settings-form'} do |f|
        .radio_block
          .option
            (( if(active) { ))
            = f.radio_button :active, true, :value => true, :checked => true
            (( } else { ))
            = f.radio_button :active, true, :value => true
            (( } ))
            = f.label :active, 'Active', :value => true
            .sublabel
              Contributions are open. People with access to this proposal can contribute to it.
          .option
            (( if(active) { ))
            = f.radio_button :active, false, :value => false
            (( } else { ))
            = f.radio_button :active, false, :value => false, :checked => true
            (( } ))
            = f.label :active, 'Inactive', :value => false
            .sublabel
              Contributions are closed. People with access to this proposal will only be able to view it. 

        .save_block
          = f.submit 'save'
          %a.cancel
            cancel

  %script{ :type => "text/template", :id => "tpl_proposal_admin_strip" }

    %span.m-proposal-admin_label
      Conversation settings:

    .m-proposal-admin-publicity.l-dialog-prompt
      %a.m-proposal-admin_operations-publicity.l-dialog-prompt-label
        //Sharing is 
        %span
          (( if(publicity == 2) { ))
          publicly accessible
          (( } else if(publicity == 1){ ))
          accessible by link only
          (( } else { ))
          private
          (( } ))

    .m-proposal-admin-status.l-dialog-prompt
      %a.m-proposal-admin_operations-status.l-dialog-prompt-label
        //Status is 
        %span
          (( if(active){ ))
          active
          (( } else { ))
          inactive
          (( } ))


    = link_to "Delete conversation", "{{Routes.proposal_path(long_id)}}", :confirm => "Are you sure you wish to permanently delete this conversation?", :method => :delete, :remote => true, :class => 'm-delete_proposal'


  = render :partial => 'assessable/templates_user_facing'

  = render :partial => 'backbone/templates_user'