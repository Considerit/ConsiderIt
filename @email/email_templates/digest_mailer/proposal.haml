Hi #{@user.first_name}, 

= paragraph("A quick update on #{styled_link(@proposal.slug, @proposal.name, text_instead: true)}.")

- if @notifications.has_key? 'edited_proposal'
  - if @subdomain.name == 'RANDOM2015'
    = paragraph "A review was uploaded from EasyChair"
  - else 
    = paragraph "This proposal has been edited."


- if @notifications.has_key? 'new_opinion'
  = paragraph "#{get_user_str(@notifications['new_opinion']['watched'])} contributed their opinions"

- if @notifications.has_key? 'new_point'

  - grouped = group_by_user(@notifications['new_point']['watched'])

  - count = grouped.keys.length
  
  = section_header("New points")

  - for user_id, notifications in grouped
    - points = notifications.map {|n| n.event_object }
    
    - txt = "#{User.find(user_id).name} adds: "
    - points.each_with_index do |point, idx|

      - point_link = styled_link(point.proposal.slug, "\"#{point.title(40)}\"", :search_params => {selected: "%2Fpoint%2F#{point.id}"}, :text_preceding => "'#{point.title(40)}'. View at ")

      - if idx == points.length - 1 && points.length > 1
        - txt += 'and '

      - txt += point_link

      - if idx < points.length - 1
        - txt += ', ' 
  
    = list_item(txt)    
               


- for event in ['new_comment', 'new_assessment']

  - if @notifications.has_key? event

    = section_header("New comments")

    - comment_sections = [ |
          ['point_authored', ' your point '], |
          ['point_engaged', ' a point you\'ve engaged '], |
          ['watched', ''], |
      ] |

    - for section in comment_sections
      - key = section[0]
      - relation = section[1]

      - if @notifications[event].has_key? key

        - by_event_object = group_by_object(@notifications[event][key])
        - for event_object_id, notifications in by_event_object

          - comment = notifications[0].event_object
          - point = comment.point

          - txt = "#{get_user_str(notifications)} commented on#{relation}"
          - txt += styled_link(point.proposal.slug, "\"#{point.title(40)}\"", :search_params => {selected: "%2Fpoint%2F#{point.id}"}, :text_preceding => "'#{point.title(40)}'. View at ")

          = list_item(txt)




= content_for :footer do
  = render :partial => 'event_mailer/unsubscribe'
    