//*********************************************
// For the ConsiderIt project.
// Copyright (C) 2010 - 2012 by Travis Kriplean.
// Licensed under the AGPL for non-commercial use.
// See https://github.com/tkriplean/ConsiderIt/ for details.
//*********************************************

-# TODO: substitute for signin form if not current_user
- prompt ||= "Follow this #{followable.class.name.downcase}"
- unfollow_prompt ||= "Unfollow this #{followable.class.name.downcase}"
- title ||= "Get email notifications about this #{followable.class.name.downcase}"

- if current_user
  - #existing_follows = Followable::Follow.where(:followable_type => followable.class.name, :followable_id => followable.id, :user_id => current_user.id).first

  - existing_follows = followable.follows.where(:user_id => current_user.id).first
  - already_follows = !existing_follows.nil? && existing_follows.follow

  .follow{ :class => "#{already_follows ? 'hide' : ''}"}
    = form_for :follows, :url => follow_path, :as => :follow, :method => :get, :remote => true do |f|
      = f.hidden_field :followable_id, :value => followable.id
      = f.hidden_field :followable_type, :value => followable.class.name
      = f.submit prompt, :title => title, :class => 'button'

  .unfollow{ :class => "#{already_follows ? '' : 'hide'}"}
    = form_for :follows, :url => unfollow_path, :as => :follow, :method => :get, :remote => true do |f|
      = f.hidden_field :followable_id, :value => followable.id
      = f.hidden_field :followable_type, :value => followable.class.name    
      = f.submit unfollow_prompt, :class => 'button'